{"ast":null,"code":"import \"antd/es/auto-complete/style/css\";\nimport _AutoComplete from \"antd/es/auto-complete\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\antd-demo\\\\src\\\\components\\\\AutoComplete.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// const mockVal = (str, repeat = 1) => ({\n//     value: str.repeat(repeat),\n//     // value：输入的字符串重复几次，默认一次\n// });\n// export default () => {\n//     const [value, setValue] = useState('');\n//     const [options, setOptions] = useState([]);\n//     const onSearch = (searchText) => {\n//         // 搜索时输入框中的内容\n//         setOptions(\n//             !searchText ? [] : [mockVal(searchText), mockVal(searchText, 2), mockVal(searchText, 3)],\n//         );\n//         console.log('onSearch', options);\n//     };\n//     const onSelect = (data) => {\n//         //option项被选中时调用，参数为选中项的 value 值\n//         console.log('onSelect', data);\n//     };\n//     const onChange = (data) => {\n//         // 选中 option项，或 input 的 value 变化时，调用此函数\n//         console.log('onChange', data);\n//         setValue(data);\n//     };\n//     return (\n//         <>\n//             {/*options：选项内容 */}\n//             <AutoComplete\n//                 options={options}\n//                 style={{\n//                     width: 200,\n//                 }}\n//                 onSelect={onSelect}\n//                 onSearch={onSearch}\n//                 placeholder=\"input here\"\n//             />\n//             <br />\n//             <br />\n//             {/* value：指定当前选中的条目 */}\n//             <AutoComplete\n//                 value={value}\n//                 options={options}\n//                 style={{\n//                     width: 200,\n//                 }}\n//                 onSelect={onSelect}\n//                 onSearch={onSearch}\n//                 onChange={onChange}\n//                 placeholder=\"control mode\"\n//             />\n//         </>\n//     );\n// };\nconst {\n  Option\n} = _AutoComplete;\nexport default _s(() => {\n  _s();\n\n  const [result, setResult] = useState([]);\n\n  const handleSearch = value => {\n    let res = [];\n\n    if (!value || value.indexOf('@') >= 0) {\n      res = [];\n    } else {\n      res = ['gmail.com', '163.com', 'qq.com'].map(domain => `${value}@${domain}`);\n    }\n\n    setResult(res);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_AutoComplete, {\n    style: {\n      width: 200\n    },\n    onSearch: handleSearch,\n    placeholder: \"input here\",\n    children: result.map(email => /*#__PURE__*/_jsxDEV(Option, {\n      value: email,\n      children: email\n    }, email, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}, \"cW0+QCQMA4zTol5H7z5XfVXOO40=\");","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/antd-demo/src/components/AutoComplete.jsx"],"names":["React","useState","Option","result","setResult","handleSearch","value","res","indexOf","map","domain","width","email"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAM;AAAEC,EAAAA;AAAF,iBAAN;AAEA,kBAAe,MAAM;AAAA;;AACjB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMI,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAIC,GAAG,GAAG,EAAV;;AAEA,QAAI,CAACD,KAAD,IAAUA,KAAK,CAACE,OAAN,CAAc,GAAd,KAAsB,CAApC,EAAuC;AACnCD,MAAAA,GAAG,GAAG,EAAN;AACH,KAFD,MAEO;AACHA,MAAAA,GAAG,GAAG,CAAC,WAAD,EAAc,SAAd,EAAyB,QAAzB,EAAmCE,GAAnC,CAAwCC,MAAD,IAAa,GAAEJ,KAAM,IAAGI,MAAO,EAAtE,CAAN;AACH;;AAEDN,IAAAA,SAAS,CAACG,GAAD,CAAT;AACH,GAVD;;AAYA,sBACI;AACI,IAAA,KAAK,EAAE;AACHI,MAAAA,KAAK,EAAE;AADJ,KADX;AAII,IAAA,QAAQ,EAAEN,YAJd;AAKI,IAAA,WAAW,EAAC,YALhB;AAAA,cAOKF,MAAM,CAACM,GAAP,CAAYG,KAAD,iBACR,QAAC,MAAD;AAAoB,MAAA,KAAK,EAAEA,KAA3B;AAAA,gBACKA;AADL,OAAaA,KAAb;AAAA;AAAA;AAAA;AAAA,YADH;AAPL;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA9BD","sourcesContent":["import React, { useState } from 'react';\r\nimport { AutoComplete } from 'antd';\r\n\r\n// const mockVal = (str, repeat = 1) => ({\r\n//     value: str.repeat(repeat),\r\n//     // value：输入的字符串重复几次，默认一次\r\n// });\r\n\r\n// export default () => {\r\n//     const [value, setValue] = useState('');\r\n//     const [options, setOptions] = useState([]);\r\n\r\n//     const onSearch = (searchText) => {\r\n//         // 搜索时输入框中的内容\r\n//         setOptions(\r\n//             !searchText ? [] : [mockVal(searchText), mockVal(searchText, 2), mockVal(searchText, 3)],\r\n//         );\r\n//         console.log('onSearch', options);\r\n//     };\r\n\r\n//     const onSelect = (data) => {\r\n//         //option项被选中时调用，参数为选中项的 value 值\r\n//         console.log('onSelect', data);\r\n//     };\r\n\r\n//     const onChange = (data) => {\r\n//         // 选中 option项，或 input 的 value 变化时，调用此函数\r\n//         console.log('onChange', data);\r\n\r\n//         setValue(data);\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n//             {/*options：选项内容 */}\r\n//             <AutoComplete\r\n//                 options={options}\r\n//                 style={{\r\n//                     width: 200,\r\n//                 }}\r\n//                 onSelect={onSelect}\r\n//                 onSearch={onSearch}\r\n//                 placeholder=\"input here\"\r\n//             />\r\n//             <br />\r\n//             <br />\r\n//             {/* value：指定当前选中的条目 */}\r\n//             <AutoComplete\r\n//                 value={value}\r\n//                 options={options}\r\n//                 style={{\r\n//                     width: 200,\r\n//                 }}\r\n//                 onSelect={onSelect}\r\n//                 onSearch={onSearch}\r\n//                 onChange={onChange}\r\n//                 placeholder=\"control mode\"\r\n//             />\r\n//         </>\r\n//     );\r\n// };\r\n\r\nconst { Option } = AutoComplete;\r\n\r\nexport default () => {\r\n    const [result, setResult] = useState([]);\r\n\r\n    const handleSearch = (value) => {\r\n        let res = [];\r\n\r\n        if (!value || value.indexOf('@') >= 0) {\r\n            res = [];\r\n        } else {\r\n            res = ['gmail.com', '163.com', 'qq.com'].map((domain) => `${value}@${domain}`);\r\n        }\r\n\r\n        setResult(res);\r\n    };\r\n\r\n    return (\r\n        <AutoComplete\r\n            style={{\r\n                width: 200,\r\n            }}\r\n            onSearch={handleSearch}\r\n            placeholder=\"input here\"\r\n        >\r\n            {result.map((email) => (\r\n                <Option key={email} value={email}>\r\n                    {email}\r\n                </Option>\r\n            ))}\r\n        </AutoComplete>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}