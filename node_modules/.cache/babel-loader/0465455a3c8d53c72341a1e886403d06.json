{"ast":null,"code":"import \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\antd-demo\\\\src\\\\components\\\\Table6.jsx\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  filters: [{\n    text: 'Joe',\n    value: 'Joe'\n  }, {\n    text: 'Jim',\n    value: 'Jim'\n  }, {\n    text: 'Submenu',\n    value: 'Submenu',\n    children: [{\n      text: 'Green',\n      value: 'Green'\n    }, {\n      text: 'Black',\n      value: 'Black'\n    }]\n  }],\n  // specify the condition of filtering result\n  // here is that finding the name started with `value`\n  // filters 属性来指定需要筛选菜单的列，onFilter 用于筛选当前数据，filterMultiple 用于指定多选和单选。\n  onFilter: (value, record) => {\n    // console.log('value', value, 'record', record)\n    return record.name.indexOf(value) === 0;\n  },\n  sorter: (a, b) => a.name.length - b.name.length,\n  sortDirections: ['ascend'] // 选择展示的图标是升序还是降序，默认是既有升序又有降序\n\n}, {\n  title: 'Age',\n  dataIndex: 'age',\n  // defaultSortOrder: 'descend', 初始就是降序排列\n  sorter: (a, b) => a.age - b.age\n}, {\n  title: 'Address',\n  dataIndex: 'address',\n  filters: [{\n    text: 'London',\n    value: 'London'\n  }, {\n    text: 'New York',\n    value: 'New York'\n  }],\n  onFilter: (value, record) => record.address.indexOf(value) === 0\n}];\nconst data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  address: 'New York No. 1 Lake Park'\n}, {\n  key: '2',\n  name: 'Jim Green',\n  age: 42,\n  address: 'London No. 1 Lake Park'\n}, {\n  key: '3',\n  name: 'Joe Black',\n  age: 32,\n  address: 'Sidney No. 1 Lake Park'\n}, {\n  key: '4',\n  name: 'Jim Red',\n  age: 32,\n  address: 'London No. 2 Lake Park'\n}];\n\nfunction onChange(pagination, filters, sorter, extra) {\n  console.log('params', pagination, filters, sorter, extra);\n}\n\nexport default function Table6() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(_Table, {\n      columns: columns,\n      dataSource: data,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n_c = Table6;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table6\");","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/antd-demo/src/components/Table6.jsx"],"names":["React","useState","columns","title","dataIndex","filters","text","value","children","onFilter","record","name","indexOf","sorter","a","b","length","sortDirections","age","address","data","key","onChange","pagination","extra","console","log","Table6"],"mappings":"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","sourcesContent":["import { Table } from 'antd';\r\nimport React, { useState } from 'react';\r\n\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        filters: [\r\n            {\r\n                text: 'Joe',\r\n                value: 'Joe',\r\n            },\r\n            {\r\n                text: 'Jim',\r\n                value: 'Jim',\r\n            },\r\n            {\r\n                text: 'Submenu',\r\n                value: 'Submenu',\r\n                children: [\r\n                    {\r\n                        text: 'Green',\r\n                        value: 'Green',\r\n                    },\r\n                    {\r\n                        text: 'Black',\r\n                        value: 'Black',\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n        // specify the condition of filtering result\r\n        // here is that finding the name started with `value`\r\n        // filters 属性来指定需要筛选菜单的列，onFilter 用于筛选当前数据，filterMultiple 用于指定多选和单选。\r\n        onFilter: (value, record) => {\r\n            // console.log('value', value, 'record', record)\r\n            return record.name.indexOf(value) === 0;\r\n        },\r\n        sorter: (a, b) => a.name.length - b.name.length,\r\n\r\n        sortDirections: ['ascend'],\r\n        // 选择展示的图标是升序还是降序，默认是既有升序又有降序\r\n    },\r\n    {\r\n        title: 'Age',\r\n        dataIndex: 'age',\r\n        // defaultSortOrder: 'descend', 初始就是降序排列\r\n        sorter: (a, b) => a.age - b.age,\r\n    },\r\n    {\r\n        title: 'Address',\r\n        dataIndex: 'address',\r\n        filters: [\r\n            {\r\n                text: 'London',\r\n                value: 'London',\r\n            },\r\n            {\r\n                text: 'New York',\r\n                value: 'New York',\r\n            },\r\n        ],\r\n        onFilter: (value, record) => record.address.indexOf(value) === 0,\r\n    },\r\n];\r\n\r\nconst data = [\r\n    {\r\n        key: '1',\r\n        name: 'John Brown',\r\n        age: 32,\r\n        address: 'New York No. 1 Lake Park',\r\n    },\r\n    {\r\n        key: '2',\r\n        name: 'Jim Green',\r\n        age: 42,\r\n        address: 'London No. 1 Lake Park',\r\n    },\r\n    {\r\n        key: '3',\r\n        name: 'Joe Black',\r\n        age: 32,\r\n        address: 'Sidney No. 1 Lake Park',\r\n    },\r\n    {\r\n        key: '4',\r\n        name: 'Jim Red',\r\n        age: 32,\r\n        address: 'London No. 2 Lake Park',\r\n    },\r\n];\r\n\r\nfunction onChange(pagination, filters, sorter, extra) {\r\n    console.log('params', pagination, filters, sorter, extra);\r\n}\r\n\r\nexport default function Table6() {\r\n    return (\r\n        <div>\r\n            <Table columns={columns} dataSource={data} onChange={onChange} />\r\n\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}