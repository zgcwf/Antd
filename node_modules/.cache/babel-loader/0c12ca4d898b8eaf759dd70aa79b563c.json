{"ast":null,"code":"import \"antd/es/switch/style/css\";\nimport _Switch from \"antd/es/switch\";\nimport \"antd/es/typography/style/css\";\nimport _Typography from \"antd/es/typography\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\antd-demo\\\\src\\\\components\\\\Typography.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { HighlightOutlined, SmileOutlined, SmileFilled } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Paragraph,\n  Text\n} = _Typography;\n\nfunction Demo() {\n  _s();\n\n  // const [内部当前的状态值, 更新状态值的函数] = useState(第一次初始化指定的值在内部作缓存);\n  const [editableStr, setEditableStr] = useState('This is an editable text.');\n  const [customIconStr, setCustomIconStr] = useState('Custom Edit icon and replace tooltip text.');\n  const [hideTooltipStr, setHideTooltipStr] = useState('Hide Edit tooltip.');\n  const [lengthLimitedStr, setLengthLimitedStr] = useState('This is an editable text with limited length.');\n  const [ellipsis, setEllipsis] = React.useState(true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Paragraph, {\n      editable: {\n        onChange: setEditableStr\n      },\n      children: editableStr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n      editable: {\n        icon: /*#__PURE__*/_jsxDEV(HighlightOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 27\n        }, this),\n        tooltip: '点击编辑',\n        onChange: setCustomIconStr\n      },\n      children: customIconStr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n      editable: {\n        tooltip: false,\n        onChange: setHideTooltipStr\n      },\n      children: hideTooltipStr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n      editable: {\n        onChange: setLengthLimitedStr,\n        maxLength: 500,\n        autoSize: {\n          maxRows: 5,\n          minRows: 3\n        }\n      },\n      children: lengthLimitedStr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n      copyable: true,\n      children: \"This is a copyable text.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n      copyable: {\n        text: 'Hello, Ant Design!'\n      },\n      children: \"Replace copy text.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n      copyable: {\n        icon: [/*#__PURE__*/_jsxDEV(SmileOutlined, {}, \"copy-icon\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(SmileFilled, {}, \"copied-icon\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 63\n        }, this)],\n        tooltips: ['click here', 'you clicked!!']\n      },\n      children: \"Custom Copy icon and replace tooltips text.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n      copyable: {\n        tooltips: false\n      },\n      children: \"Hide Copy tooltips.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Switch, {\n      checked: ellipsis,\n      onChange: () => {\n        setEllipsis(!ellipsis);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n      ellipsis: ellipsis,\n      children: \"Ant Design, a design language for background applications, is refined by Ant UED Team. Ant Design, a design language for background applications, is refined by Ant UED Team. Ant Design, a design language for background applications, is refined by Ant UED Team. Ant Design, a design language for background applications, is refined by Ant UED Team. Ant Design, a design language for background applications, is refined by Ant UED Team. Ant Design, a design language for background applications, is refined by Ant UED Team.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n      ellipsis: ellipsis ? {\n        rows: 3,\n        expandable: true,\n        symbol: '展开'\n      } : false,\n      children: \"Ant Design, a design language for background applications, is refined by Ant UED Team. Ant Design, a design language for background applications, is refined by Ant UED Team. Ant Design, a design language for background applications, is refined by Ant UED Team. Ant Design, a design language for background applications, is refined by Ant UED Team. Ant Design, a design language for background applications, is refined by Ant UED Team. Ant Design, a design language for background applications, is refined by Ant UED Team.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      style: ellipsis ? {\n        width: 100\n      } : undefined,\n      ellipsis: ellipsis ? {\n        tooltip: 'I am ellipsis now!'\n      } : false,\n      children: \"Ant Design, a design language for background applications, is refined by Ant UED Team.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Demo, \"L6NCchEyaL5prApKou0+tF8xOVs=\");\n\n_c = Demo;\n;\nexport default Demo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/antd-demo/src/components/Typography.jsx"],"names":["React","useState","HighlightOutlined","SmileOutlined","SmileFilled","Paragraph","Text","Demo","editableStr","setEditableStr","customIconStr","setCustomIconStr","hideTooltipStr","setHideTooltipStr","lengthLimitedStr","setLengthLimitedStr","ellipsis","setEllipsis","onChange","icon","tooltip","maxLength","autoSize","maxRows","minRows","text","tooltips","rows","expandable","symbol","width","undefined"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Typography, Switch } from 'antd';\r\nimport { HighlightOutlined, SmileOutlined, SmileFilled } from '@ant-design/icons';\r\n\r\nconst { Paragraph, Text } = Typography;\r\n\r\nfunction Demo() {\r\n    // const [内部当前的状态值, 更新状态值的函数] = useState(第一次初始化指定的值在内部作缓存);\r\n    const [editableStr, setEditableStr] = useState('This is an editable text.');\r\n    const [customIconStr, setCustomIconStr] = useState('Custom Edit icon and replace tooltip text.');\r\n    const [hideTooltipStr, setHideTooltipStr] = useState('Hide Edit tooltip.');\r\n    const [lengthLimitedStr, setLengthLimitedStr] = useState(\r\n        'This is an editable text with limited length.',\r\n    );\r\n    const [ellipsis, setEllipsis] = React.useState(true);\r\n    return (\r\n        <>\r\n            <Paragraph editable={{ onChange: setEditableStr }}>{editableStr}</Paragraph>\r\n            <Paragraph\r\n                editable={{\r\n                    icon: <HighlightOutlined />,\r\n                    tooltip: '点击编辑',\r\n                    onChange: setCustomIconStr,\r\n                }}\r\n            >\r\n                {customIconStr}\r\n            </Paragraph>\r\n            <Paragraph editable={{ tooltip: false, onChange: setHideTooltipStr }}>\r\n                {hideTooltipStr}\r\n            </Paragraph>\r\n            <Paragraph\r\n                editable={{\r\n                    onChange: setLengthLimitedStr,\r\n                    maxLength: 500,\r\n                    autoSize: { maxRows: 5, minRows: 3 },\r\n                }}\r\n            >\r\n                {lengthLimitedStr}\r\n            </Paragraph>\r\n            <Paragraph copyable>This is a copyable text.</Paragraph>\r\n            <Paragraph copyable={{ text: 'Hello, Ant Design!' }}>Replace copy text.</Paragraph>\r\n            <Paragraph\r\n                copyable={{\r\n                    icon: [<SmileOutlined key=\"copy-icon\" />, <SmileFilled key=\"copied-icon\" />],\r\n                    tooltips: ['click here', 'you clicked!!'],\r\n                }}\r\n            >\r\n                Custom Copy icon and replace tooltips text.\r\n            </Paragraph>\r\n            <Paragraph copyable={{ tooltips: false }}>Hide Copy tooltips.</Paragraph>\r\n            <hr />\r\n            <hr />\r\n            <Switch\r\n                checked={ellipsis}\r\n                onChange={() => {\r\n                    setEllipsis(!ellipsis);\r\n                }}\r\n            />\r\n            <hr />\r\n\r\n            <Paragraph ellipsis={ellipsis}>\r\n                Ant Design, a design language for background applications, is refined by Ant UED Team. Ant\r\n                Design, a design language for background applications, is refined by Ant UED Team. Ant\r\n                Design, a design language for background applications, is refined by Ant UED Team. Ant\r\n                Design, a design language for background applications, is refined by Ant UED Team. Ant\r\n                Design, a design language for background applications, is refined by Ant UED Team. Ant\r\n                Design, a design language for background applications, is refined by Ant UED Team.\r\n            </Paragraph>\r\n\r\n            <Paragraph ellipsis={ellipsis ? { rows: 3, expandable: true, symbol: '展开' } : false}>\r\n                Ant Design, a design language for background applications, is refined by Ant UED Team. Ant\r\n                Design, a design language for background applications, is refined by Ant UED Team. Ant\r\n                Design, a design language for background applications, is refined by Ant UED Team. Ant\r\n                Design, a design language for background applications, is refined by Ant UED Team. Ant\r\n                Design, a design language for background applications, is refined by Ant UED Team. Ant\r\n                Design, a design language for background applications, is refined by Ant UED Team.\r\n            </Paragraph>\r\n\r\n            <Text\r\n                style={ellipsis ? { width: 100 } : undefined}\r\n                ellipsis={ellipsis ? { tooltip: 'I am ellipsis now!' } : false}\r\n            >\r\n                Ant Design, a design language for background applications, is refined by Ant UED Team.\r\n            </Text>\r\n        </>\r\n    );\r\n};\r\nexport default Demo"]},"metadata":{},"sourceType":"module"}