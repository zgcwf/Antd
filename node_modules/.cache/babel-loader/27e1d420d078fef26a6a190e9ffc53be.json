{"ast":null,"code":"import \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\antd-demo\\\\src\\\\components\\\\Table5.jsx\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name'\n}, {\n  title: 'Age',\n  dataIndex: 'age'\n}, {\n  title: 'Address',\n  dataIndex: 'address'\n}];\nconst data = [];\n\nfor (let i = 0; i < 46; i++) {\n  data.push({\n    key: i,\n    name: `Edward King ${i}`,\n    age: 32,\n    address: `London, Park Lane no. ${i}`\n  });\n}\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedRowKeys: [] // Check here to configure the default column\n\n    };\n\n    this.onSelectChange = selectedRowKeys => {\n      console.log('selectedRowKeys changed: ', selectedRowKeys);\n      this.setState({\n        selectedRowKeys\n      });\n    };\n  }\n\n  render() {\n    const {\n      selectedRowKeys\n    } = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n      selections: [_Table.SELECTION_ALL, _Table.SELECTION_INVERT, _Table.SELECTION_NONE, {\n        key: 'odd',\n        text: 'Select Odd Row',\n        onSelect: changableRowKeys => {\n          let newSelectedRowKeys = [];\n          newSelectedRowKeys = changableRowKeys.filter((key, index) => {\n            if (index % 2 !== 0) {\n              return false;\n            }\n\n            return true;\n          });\n          this.setState({\n            selectedRowKeys: newSelectedRowKeys\n          });\n        }\n      }, {\n        key: 'even',\n        text: 'Select Even Row',\n        onSelect: changableRowKeys => {\n          let newSelectedRowKeys = [];\n          newSelectedRowKeys = changableRowKeys.filter((key, index) => {\n            if (index % 2 !== 0) {\n              return true;\n            }\n\n            return false;\n          });\n          this.setState({\n            selectedRowKeys: newSelectedRowKeys\n          });\n        }\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(_Table, {\n      rowSelection: rowSelection,\n      columns: columns,\n      dataSource: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 82,\n  columnNumber: 17\n}, this), mountNode);","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/antd-demo/src/components/Table5.jsx"],"names":["React","useState","columns","title","dataIndex","data","i","push","key","name","age","address","App","Component","state","selectedRowKeys","onSelectChange","console","log","setState","render","rowSelection","onChange","selections","SELECTION_ALL","SELECTION_INVERT","SELECTION_NONE","text","onSelect","changableRowKeys","newSelectedRowKeys","filter","index","ReactDOM","mountNode"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n    },\r\n    {\r\n        title: 'Age',\r\n        dataIndex: 'age',\r\n    },\r\n    {\r\n        title: 'Address',\r\n        dataIndex: 'address',\r\n    },\r\n];\r\n\r\nconst data = [];\r\nfor (let i = 0; i < 46; i++) {\r\n    data.push({\r\n        key: i,\r\n        name: `Edward King ${i}`,\r\n        age: 32,\r\n        address: `London, Park Lane no. ${i}`,\r\n    });\r\n}\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        selectedRowKeys: [], // Check here to configure the default column\r\n    };\r\n\r\n    onSelectChange = selectedRowKeys => {\r\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n        this.setState({ selectedRowKeys });\r\n    };\r\n\r\n    render() {\r\n        const { selectedRowKeys } = this.state;\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n            selections: [\r\n                Table.SELECTION_ALL,\r\n                Table.SELECTION_INVERT,\r\n                Table.SELECTION_NONE,\r\n                {\r\n                    key: 'odd',\r\n                    text: 'Select Odd Row',\r\n                    onSelect: changableRowKeys => {\r\n                        let newSelectedRowKeys = [];\r\n                        newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                            if (index % 2 !== 0) {\r\n                                return false;\r\n                            }\r\n                            return true;\r\n                        });\r\n                        this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n                    },\r\n                },\r\n                {\r\n                    key: 'even',\r\n                    text: 'Select Even Row',\r\n                    onSelect: changableRowKeys => {\r\n                        let newSelectedRowKeys = [];\r\n                        newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                            if (index % 2 !== 0) {\r\n                                return true;\r\n                            }\r\n                            return false;\r\n                        });\r\n                        this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        return <Table rowSelection={rowSelection} columns={columns} dataSource={data} />;\r\n    }\r\n}\r\n\r\nReactDOM.render(<App />, mountNode);"]},"metadata":{},"sourceType":"module"}