{"ast":null,"code":"import \"antd/es/divider/style/css\";\nimport _Divider from \"antd/es/divider\";\nimport \"antd/es/checkbox/style/css\";\nimport _Checkbox from \"antd/es/checkbox\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\antd-demo\\\\src\\\\components\\\\Checkbox.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CheckboxGroup = _Checkbox.Group;\nconst plainOptions = ['Apple', 'Pear', 'Orange'];\nconst defaultCheckedList = ['Apple', 'Orange'];\nexport default _s(() => {\n  _s();\n\n  const [checkedList, setCheckedList] = React.useState(defaultCheckedList);\n  const [indeterminate, setIndeterminate] = React.useState(true);\n  const [checkAll, setCheckAll] = React.useState(false);\n\n  const onChange = list => {\n    setCheckedList(list);\n    setIndeterminate(!!list.length && list.length < plainOptions.length);\n    setCheckAll(list.length === plainOptions.length);\n  };\n\n  const onCheckAllChange = e => {\n    setCheckedList(e.target.checked ? plainOptions : []);\n    setIndeterminate(false);\n    setCheckAll(e.target.checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Checkbox, {\n      indeterminate: indeterminate,\n      onChange: onCheckAllChange,\n      checked: checkAll,\n      children: \"Check all\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CheckboxGroup, {\n      options: plainOptions,\n      value: checkedList,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}, \"CKjo0d5BNXrDuxwVmjr3G6UPvWE=\");","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/antd-demo/src/components/Checkbox.jsx"],"names":["React","Component","CheckboxGroup","Group","plainOptions","defaultCheckedList","checkedList","setCheckedList","useState","indeterminate","setIndeterminate","checkAll","setCheckAll","onChange","list","length","onCheckAllChange","e","target","checked"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAGA,MAAMC,aAAa,GAAG,UAASC,KAA/B;AAEA,MAAMC,YAAY,GAAG,CAAC,OAAD,EAAU,MAAV,EAAkB,QAAlB,CAArB;AACA,MAAMC,kBAAkB,GAAG,CAAC,OAAD,EAAU,QAAV,CAA3B;AAEA,kBAAe,MAAM;AAAA;;AACjB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,KAAK,CAACQ,QAAN,CAAeH,kBAAf,CAAtC;AACA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCV,KAAK,CAACQ,QAAN,CAAe,IAAf,CAA1C;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BZ,KAAK,CAACQ,QAAN,CAAe,KAAf,CAAhC;;AAEA,QAAMK,QAAQ,GAAGC,IAAI,IAAI;AACrBP,IAAAA,cAAc,CAACO,IAAD,CAAd;AACAJ,IAAAA,gBAAgB,CAAC,CAAC,CAACI,IAAI,CAACC,MAAP,IAAiBD,IAAI,CAACC,MAAL,GAAcX,YAAY,CAACW,MAA7C,CAAhB;AACAH,IAAAA,WAAW,CAACE,IAAI,CAACC,MAAL,KAAgBX,YAAY,CAACW,MAA9B,CAAX;AACH,GAJD;;AAMA,QAAMC,gBAAgB,GAAGC,CAAC,IAAI;AAC1BV,IAAAA,cAAc,CAACU,CAAC,CAACC,MAAF,CAASC,OAAT,GAAmBf,YAAnB,GAAkC,EAAnC,CAAd;AACAM,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAE,IAAAA,WAAW,CAACK,CAAC,CAACC,MAAF,CAASC,OAAV,CAAX;AACH,GAJD;;AAMA,sBACI;AAAA,4BAEI;AAAU,MAAA,aAAa,EAAEV,aAAzB;AAAwC,MAAA,QAAQ,EAAEO,gBAAlD;AAAoE,MAAA,OAAO,EAAEL,QAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AAAA;AAAA;AAAA;AAAA,YALJ,eAOI,QAAC,aAAD;AAAe,MAAA,OAAO,EAAEP,YAAxB;AAAsC,MAAA,KAAK,EAAEE,WAA7C;AAA0D,MAAA,QAAQ,EAAEO;AAApE;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AAWH,CA5BD","sourcesContent":["import React, { Component } from 'react'\r\nimport { Checkbox, Divider } from 'antd';\r\n\r\nconst CheckboxGroup = Checkbox.Group;\r\n\r\nconst plainOptions = ['Apple', 'Pear', 'Orange'];\r\nconst defaultCheckedList = ['Apple', 'Orange'];\r\n\r\nexport default () => {\r\n    const [checkedList, setCheckedList] = React.useState(defaultCheckedList);\r\n    const [indeterminate, setIndeterminate] = React.useState(true);\r\n    const [checkAll, setCheckAll] = React.useState(false);\r\n\r\n    const onChange = list => {\r\n        setCheckedList(list);\r\n        setIndeterminate(!!list.length && list.length < plainOptions.length);\r\n        setCheckAll(list.length === plainOptions.length);\r\n    };\r\n\r\n    const onCheckAllChange = e => {\r\n        setCheckedList(e.target.checked ? plainOptions : []);\r\n        setIndeterminate(false);\r\n        setCheckAll(e.target.checked);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* indeterminate特殊状态：半选，  checked：是否选中*/}\r\n            <Checkbox indeterminate={indeterminate} onChange={onCheckAllChange} checked={checkAll}>\r\n                Check all\r\n            </Checkbox>\r\n            <Divider />\r\n            {/* options\t可选项.value选中的选项 */}\r\n            <CheckboxGroup options={plainOptions} value={checkedList} onChange={onChange} />\r\n        </>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}