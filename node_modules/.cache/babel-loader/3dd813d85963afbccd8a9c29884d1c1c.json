{"ast":null,"code":"import \"antd/es/typography/style/css\";\nimport _Typography from \"antd/es/typography\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\antd-demo\\\\src\\\\components\\\\Typography.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { HighlightOutlined, SmileOutlined, SmileFilled } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Paragraph\n} = _Typography;\n\nconst Demo = () => {\n  _s();\n\n  const [editableStr, setEditableStr] = useState('This is an editable text.');\n  const [customIconStr, setCustomIconStr] = useState('Custom Edit icon and replace tooltip text.');\n  const [hideTooltipStr, setHideTooltipStr] = useState('Hide Edit tooltip.');\n  const [lengthLimitedStr, setLengthLimitedStr] = useState('This is an editable text with limited length.');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Paragraph, {\n      editable: {\n        onChange: setEditableStr\n      },\n      children: editableStr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n      editable: {\n        icon: /*#__PURE__*/_jsxDEV(HighlightOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 27\n        }, this),\n        tooltip: 'click to edit text',\n        onChange: setCustomIconStr\n      },\n      children: customIconStr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n      editable: {\n        tooltip: false,\n        onChange: setHideTooltipStr\n      },\n      children: hideTooltipStr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n      editable: {\n        onChange: setLengthLimitedStr,\n        maxLength: 50,\n        autoSize: {\n          maxRows: 5,\n          minRows: 3\n        }\n      },\n      children: lengthLimitedStr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n      copyable: true,\n      children: \"This is a copyable text.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n      copyable: {\n        text: 'Hello, Ant Design!'\n      },\n      children: \"Replace copy text.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n      copyable: {\n        icon: [/*#__PURE__*/_jsxDEV(SmileOutlined, {}, \"copy-icon\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(SmileFilled, {}, \"copied-icon\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 63\n        }, this)],\n        tooltips: ['click here', 'you clicked!!']\n      },\n      children: \"Custom Copy icon and replace tooltips text.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n      copyable: {\n        tooltips: false\n      },\n      children: \"Hide Copy tooltips.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Demo, \"sd3JTvOWL6+2W2SthaoT6aMGNd0=\");\n\n_c = Demo;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Demo, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 54,\n  columnNumber: 17\n}, this), mountNode);\n\nvar _c;\n\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/antd-demo/src/components/Typography.jsx"],"names":["React","useState","HighlightOutlined","SmileOutlined","SmileFilled","Paragraph","Demo","editableStr","setEditableStr","customIconStr","setCustomIconStr","hideTooltipStr","setHideTooltipStr","lengthLimitedStr","setLengthLimitedStr","onChange","icon","tooltip","maxLength","autoSize","maxRows","minRows","text","tooltips","ReactDOM","render","mountNode"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,iBAAT,EAA4BC,aAA5B,EAA2CC,WAA3C,QAA8D,mBAA9D;;;AAEA,MAAM;AAAEC,EAAAA;AAAF,eAAN;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,2BAAD,CAA9C;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,4CAAD,CAAlD;AACA,QAAM,CAACU,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,oBAAD,CAApD;AACA,QAAM,CAACY,gBAAD,EAAmBC,mBAAnB,IAA0Cb,QAAQ,CACpD,+CADoD,CAAxD;AAIA,sBACI;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAE;AAAEc,QAAAA,QAAQ,EAAEP;AAAZ,OAArB;AAAA,gBAAoDD;AAApD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AACI,MAAA,QAAQ,EAAE;AACNS,QAAAA,IAAI,eAAE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,gBADA;AAENC,QAAAA,OAAO,EAAE,oBAFH;AAGNF,QAAAA,QAAQ,EAAEL;AAHJ,OADd;AAAA,gBAOKD;AAPL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAWI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAE;AAAEQ,QAAAA,OAAO,EAAE,KAAX;AAAkBF,QAAAA,QAAQ,EAAEH;AAA5B,OAArB;AAAA,gBACKD;AADL;AAAA;AAAA;AAAA;AAAA,YAXJ,eAcI,QAAC,SAAD;AACI,MAAA,QAAQ,EAAE;AACNI,QAAAA,QAAQ,EAAED,mBADJ;AAENI,QAAAA,SAAS,EAAE,EAFL;AAGNC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,OAAO,EAAE,CAAX;AAAcC,UAAAA,OAAO,EAAE;AAAvB;AAHJ,OADd;AAAA,gBAOKR;AAPL;AAAA;AAAA;AAAA;AAAA,YAdJ,eAuBI,QAAC,SAAD;AAAW,MAAA,QAAQ,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBJ,eAwBI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAE;AAAES,QAAAA,IAAI,EAAE;AAAR,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBJ,eAyBI,QAAC,SAAD;AACI,MAAA,QAAQ,EAAE;AACNN,QAAAA,IAAI,EAAE,cAAC,QAAC,aAAD,MAAmB,WAAnB;AAAA;AAAA;AAAA;AAAA,gBAAD,eAAoC,QAAC,WAAD,MAAiB,aAAjB;AAAA;AAAA;AAAA;AAAA,gBAApC,CADA;AAENO,QAAAA,QAAQ,EAAE,CAAC,YAAD,EAAe,eAAf;AAFJ,OADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBJ,eAiCI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAE;AAAEA,QAAAA,QAAQ,EAAE;AAAZ,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjCJ;AAAA,kBADJ;AAqCH,CA7CD;;GAAMjB,I;;KAAAA,I;AA+CNkB,QAAQ,CAACC,MAAT,eAAgB,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA0BC,SAA1B","sourcesContent":["import React, { useState } from 'react';\r\nimport { Typography } from 'antd';\r\nimport { HighlightOutlined, SmileOutlined, SmileFilled } from '@ant-design/icons';\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nconst Demo = () => {\r\n    const [editableStr, setEditableStr] = useState('This is an editable text.');\r\n    const [customIconStr, setCustomIconStr] = useState('Custom Edit icon and replace tooltip text.');\r\n    const [hideTooltipStr, setHideTooltipStr] = useState('Hide Edit tooltip.');\r\n    const [lengthLimitedStr, setLengthLimitedStr] = useState(\r\n        'This is an editable text with limited length.',\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Paragraph editable={{ onChange: setEditableStr }}>{editableStr}</Paragraph>\r\n            <Paragraph\r\n                editable={{\r\n                    icon: <HighlightOutlined />,\r\n                    tooltip: 'click to edit text',\r\n                    onChange: setCustomIconStr,\r\n                }}\r\n            >\r\n                {customIconStr}\r\n            </Paragraph>\r\n            <Paragraph editable={{ tooltip: false, onChange: setHideTooltipStr }}>\r\n                {hideTooltipStr}\r\n            </Paragraph>\r\n            <Paragraph\r\n                editable={{\r\n                    onChange: setLengthLimitedStr,\r\n                    maxLength: 50,\r\n                    autoSize: { maxRows: 5, minRows: 3 },\r\n                }}\r\n            >\r\n                {lengthLimitedStr}\r\n            </Paragraph>\r\n            <Paragraph copyable>This is a copyable text.</Paragraph>\r\n            <Paragraph copyable={{ text: 'Hello, Ant Design!' }}>Replace copy text.</Paragraph>\r\n            <Paragraph\r\n                copyable={{\r\n                    icon: [<SmileOutlined key=\"copy-icon\" />, <SmileFilled key=\"copied-icon\" />],\r\n                    tooltips: ['click here', 'you clicked!!'],\r\n                }}\r\n            >\r\n                Custom Copy icon and replace tooltips text.\r\n            </Paragraph>\r\n            <Paragraph copyable={{ tooltips: false }}>Hide Copy tooltips.</Paragraph>\r\n        </>\r\n    );\r\n};\r\n\r\nReactDOM.render(<Demo />, mountNode);"]},"metadata":{},"sourceType":"module"}