{"ast":null,"code":"import \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/space/style/css\";\nimport _Space from \"antd/es/space\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\antd-demo\\\\src\\\\components\\\\Table9.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  address: 'New York No. 1 Lake Park'\n}, {\n  key: '2',\n  name: 'Jim Green',\n  age: 42,\n  address: 'London No. 1 Lake Park'\n}, {\n  key: '3',\n  name: 'Joe Black',\n  age: 32,\n  address: 'Sidney No. 1 Lake Park'\n}, {\n  key: '4',\n  name: 'Jim Red',\n  age: 32,\n  address: 'London No. 2 Lake Park'\n}];\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      filteredInfo: null,\n      sortedInfo: null\n    };\n\n    this.handleChange = (pagination, filters, sorter) => {\n      console.log('Various parameters', pagination, filters, sorter);\n      this.setState({\n        filteredInfo: filters,\n        sortedInfo: sorter\n      });\n    };\n\n    this.clearFilters = () => {\n      this.setState({\n        filteredInfo: null\n      });\n    };\n\n    this.clearAll = () => {\n      this.setState({\n        filteredInfo: null,\n        sortedInfo: null\n      });\n    };\n\n    this.setAgeSort = () => {\n      this.setState({\n        sortedInfo: {\n          order: 'descend',\n          columnKey: 'age'\n        }\n      });\n    };\n  }\n\n  render() {\n    let {\n      sortedInfo,\n      filteredInfo\n    } = this.state;\n    sortedInfo = sortedInfo || {};\n    filteredInfo = filteredInfo || {};\n    const columns = [{\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      filters: [{\n        text: 'Joe',\n        value: 'Joe'\n      }, {\n        text: 'Jim',\n        value: 'Jim'\n      }],\n      filteredValue: filteredInfo.name || null,\n      onFilter: (value, record) => record.name.includes(value),\n      sorter: (a, b) => a.name.length - b.name.length,\n      sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order,\n      ellipsis: true\n    }, {\n      title: 'Age',\n      dataIndex: 'age',\n      key: 'age',\n      sorter: (a, b) => a.age - b.age,\n      sortOrder: sortedInfo.columnKey === 'age' && sortedInfo.order,\n      ellipsis: true\n    }, {\n      title: 'Address',\n      dataIndex: 'address',\n      key: 'address',\n      filters: [{\n        text: 'London',\n        value: 'London'\n      }, {\n        text: 'New York',\n        value: 'New York'\n      }],\n      filteredValue: filteredInfo.address || null,\n      onFilter: (value, record) => record.address.includes(value),\n      sorter: (a, b) => a.address.length - b.address.length,\n      sortOrder: sortedInfo.columnKey === 'address' && sortedInfo.order,\n      ellipsis: true\n    }];\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(_Space, {\n        style: {\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(_Button, {\n          onClick: this.setAgeSort,\n          children: \"Sort age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Button, {\n          onClick: this.clearFilters,\n          children: \"Clear filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Button, {\n          onClick: this.clearAll,\n          children: \"Clear filters and sorters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Table, {\n        columns: columns,\n        dataSource: data,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 119,\n  columnNumber: 17\n}, this), mountNode);","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/antd-demo/src/components/Table9.jsx"],"names":["data","key","name","age","address","App","React","Component","state","filteredInfo","sortedInfo","handleChange","pagination","filters","sorter","console","log","setState","clearFilters","clearAll","setAgeSort","order","columnKey","render","columns","title","dataIndex","text","value","filteredValue","onFilter","record","includes","a","b","length","sortOrder","ellipsis","marginBottom","ReactDOM","mountNode"],"mappings":"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","sourcesContent":["import { Table, Button, Space } from 'antd';\r\n\r\nconst data = [\r\n    {\r\n        key: '1',\r\n        name: 'John Brown',\r\n        age: 32,\r\n        address: 'New York No. 1 Lake Park',\r\n    },\r\n    {\r\n        key: '2',\r\n        name: 'Jim Green',\r\n        age: 42,\r\n        address: 'London No. 1 Lake Park',\r\n    },\r\n    {\r\n        key: '3',\r\n        name: 'Joe Black',\r\n        age: 32,\r\n        address: 'Sidney No. 1 Lake Park',\r\n    },\r\n    {\r\n        key: '4',\r\n        name: 'Jim Red',\r\n        age: 32,\r\n        address: 'London No. 2 Lake Park',\r\n    },\r\n];\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        filteredInfo: null,\r\n        sortedInfo: null,\r\n    };\r\n\r\n    handleChange = (pagination, filters, sorter) => {\r\n        console.log('Various parameters', pagination, filters, sorter);\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter,\r\n        });\r\n    };\r\n\r\n    clearFilters = () => {\r\n        this.setState({ filteredInfo: null });\r\n    };\r\n\r\n    clearAll = () => {\r\n        this.setState({\r\n            filteredInfo: null,\r\n            sortedInfo: null,\r\n        });\r\n    };\r\n\r\n    setAgeSort = () => {\r\n        this.setState({\r\n            sortedInfo: {\r\n                order: 'descend',\r\n                columnKey: 'age',\r\n            },\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let { sortedInfo, filteredInfo } = this.state;\r\n        sortedInfo = sortedInfo || {};\r\n        filteredInfo = filteredInfo || {};\r\n        const columns = [\r\n            {\r\n                title: 'Name',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                filters: [\r\n                    { text: 'Joe', value: 'Joe' },\r\n                    { text: 'Jim', value: 'Jim' },\r\n                ],\r\n                filteredValue: filteredInfo.name || null,\r\n                onFilter: (value, record) => record.name.includes(value),\r\n                sorter: (a, b) => a.name.length - b.name.length,\r\n                sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order,\r\n                ellipsis: true,\r\n            },\r\n            {\r\n                title: 'Age',\r\n                dataIndex: 'age',\r\n                key: 'age',\r\n                sorter: (a, b) => a.age - b.age,\r\n                sortOrder: sortedInfo.columnKey === 'age' && sortedInfo.order,\r\n                ellipsis: true,\r\n            },\r\n            {\r\n                title: 'Address',\r\n                dataIndex: 'address',\r\n                key: 'address',\r\n                filters: [\r\n                    { text: 'London', value: 'London' },\r\n                    { text: 'New York', value: 'New York' },\r\n                ],\r\n                filteredValue: filteredInfo.address || null,\r\n                onFilter: (value, record) => record.address.includes(value),\r\n                sorter: (a, b) => a.address.length - b.address.length,\r\n                sortOrder: sortedInfo.columnKey === 'address' && sortedInfo.order,\r\n                ellipsis: true,\r\n            },\r\n        ];\r\n        return (\r\n            <>\r\n                <Space style={{ marginBottom: 16 }}>\r\n                    <Button onClick={this.setAgeSort}>Sort age</Button>\r\n                    <Button onClick={this.clearFilters}>Clear filters</Button>\r\n                    <Button onClick={this.clearAll}>Clear filters and sorters</Button>\r\n                </Space>\r\n                <Table columns={columns} dataSource={data} onChange={this.handleChange} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(<App />, mountNode);"]},"metadata":{},"sourceType":"module"}