{"ast":null,"code":"import \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\antd-demo\\\\src\\\\components\\\\Table7.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  filters: [{\n    text: 'Joe',\n    value: 'Joe'\n  }, {\n    text: 'Category 1',\n    value: 'Category 1',\n    children: [{\n      text: 'Yellow',\n      value: 'Yellow'\n    }, {\n      text: 'Pink',\n      value: 'Pink'\n    }]\n  }, {\n    text: 'Category 2',\n    value: 'Category 2',\n    children: [{\n      text: 'Green',\n      value: 'Green'\n    }, {\n      text: 'Black',\n      value: 'Black'\n    }]\n  }],\n  filterMode: 'tree',\n  filterSearch: true,\n  onFilter: (value, record) => record.name.includes(value),\n  width: '30%'\n}, {\n  title: 'Age',\n  dataIndex: 'age',\n  sorter: (a, b) => a.age - b.age\n}, {\n  title: 'Address',\n  dataIndex: 'address',\n  filters: [{\n    text: 'London',\n    value: 'London'\n  }, {\n    text: 'New York',\n    value: 'New York'\n  }],\n  onFilter: (value, record) => record.address.startsWith(value),\n  filterSearch: true,\n  width: '40%'\n}];\nconst data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  address: 'New York No. 1 Lake Park'\n}, {\n  key: '2',\n  name: 'Jim Green',\n  age: 42,\n  address: 'London No. 1 Lake Park'\n}, {\n  key: '3',\n  name: 'Joe Black',\n  age: 32,\n  address: 'Sidney No. 1 Lake Park'\n}, {\n  key: '4',\n  name: 'Jim Red',\n  age: 32,\n  address: 'London No. 2 Lake Park'\n}];\n\nfunction onChange(pagination, filters, sorter, extra) {\n  console.log('params', pagination, filters, sorter, extra);\n}\n\nexport default function Table7() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(_Table, {\n      columns: columns,\n      dataSource: data,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n_c = Table7;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table7\");","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/antd-demo/src/components/Table7.jsx"],"names":["columns","title","dataIndex","filters","text","value","children","filterMode","filterSearch","onFilter","record","name","includes","width","sorter","a","b","age","address","startsWith","data","key","onChange","pagination","extra","console","log","Table7"],"mappings":";;;;AAEA,MAAMA,OAAO,GAAG,CACZ;AACIC,EAAAA,KAAK,EAAE,MADX;AAEIC,EAAAA,SAAS,EAAE,MAFf;AAGIC,EAAAA,OAAO,EAAE,CACL;AACIC,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,KAAK,EAAE;AAFX,GADK,EAKL;AACID,IAAAA,IAAI,EAAE,YADV;AAEIC,IAAAA,KAAK,EAAE,YAFX;AAGIC,IAAAA,QAAQ,EAAE,CACN;AACIF,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,KAAK,EAAE;AAFX,KADM,EAKN;AACID,MAAAA,IAAI,EAAE,MADV;AAEIC,MAAAA,KAAK,EAAE;AAFX,KALM;AAHd,GALK,EAmBL;AACID,IAAAA,IAAI,EAAE,YADV;AAEIC,IAAAA,KAAK,EAAE,YAFX;AAGIC,IAAAA,QAAQ,EAAE,CACN;AACIF,MAAAA,IAAI,EAAE,OADV;AAEIC,MAAAA,KAAK,EAAE;AAFX,KADM,EAKN;AACID,MAAAA,IAAI,EAAE,OADV;AAEIC,MAAAA,KAAK,EAAE;AAFX,KALM;AAHd,GAnBK,CAHb;AAqCIE,EAAAA,UAAU,EAAE,MArChB;AAsCIC,EAAAA,YAAY,EAAE,IAtClB;AAuCIC,EAAAA,QAAQ,EAAE,CAACJ,KAAD,EAAQK,MAAR,KAAmBA,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBP,KAArB,CAvCjC;AAwCIQ,EAAAA,KAAK,EAAE;AAxCX,CADY,EA2CZ;AACIZ,EAAAA,KAAK,EAAE,KADX;AAEIC,EAAAA,SAAS,EAAE,KAFf;AAGIY,EAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,GAAF,GAAQD,CAAC,CAACC;AAHhC,CA3CY,EAgDZ;AACIhB,EAAAA,KAAK,EAAE,SADX;AAEIC,EAAAA,SAAS,EAAE,SAFf;AAGIC,EAAAA,OAAO,EAAE,CACL;AACIC,IAAAA,IAAI,EAAE,QADV;AAEIC,IAAAA,KAAK,EAAE;AAFX,GADK,EAKL;AACID,IAAAA,IAAI,EAAE,UADV;AAEIC,IAAAA,KAAK,EAAE;AAFX,GALK,CAHb;AAaII,EAAAA,QAAQ,EAAE,CAACJ,KAAD,EAAQK,MAAR,KAAmBA,MAAM,CAACQ,OAAP,CAAeC,UAAf,CAA0Bd,KAA1B,CAbjC;AAcIG,EAAAA,YAAY,EAAE,IAdlB;AAeIK,EAAAA,KAAK,EAAE;AAfX,CAhDY,CAAhB;AAmEA,MAAMO,IAAI,GAAG,CACT;AACIC,EAAAA,GAAG,EAAE,GADT;AAEIV,EAAAA,IAAI,EAAE,YAFV;AAGIM,EAAAA,GAAG,EAAE,EAHT;AAIIC,EAAAA,OAAO,EAAE;AAJb,CADS,EAOT;AACIG,EAAAA,GAAG,EAAE,GADT;AAEIV,EAAAA,IAAI,EAAE,WAFV;AAGIM,EAAAA,GAAG,EAAE,EAHT;AAIIC,EAAAA,OAAO,EAAE;AAJb,CAPS,EAaT;AACIG,EAAAA,GAAG,EAAE,GADT;AAEIV,EAAAA,IAAI,EAAE,WAFV;AAGIM,EAAAA,GAAG,EAAE,EAHT;AAIIC,EAAAA,OAAO,EAAE;AAJb,CAbS,EAmBT;AACIG,EAAAA,GAAG,EAAE,GADT;AAEIV,EAAAA,IAAI,EAAE,SAFV;AAGIM,EAAAA,GAAG,EAAE,EAHT;AAIIC,EAAAA,OAAO,EAAE;AAJb,CAnBS,CAAb;;AA2BA,SAASI,QAAT,CAAkBC,UAAlB,EAA8BpB,OAA9B,EAAuCW,MAAvC,EAA+CU,KAA/C,EAAsD;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,UAAtB,EAAkCpB,OAAlC,EAA2CW,MAA3C,EAAmDU,KAAnD;AACH;;AAED,eAAe,SAASG,MAAT,GAAkB;AAC7B,sBACI;AAAA,2BACI;AAAO,MAAA,OAAO,EAAE3B,OAAhB;AAAyB,MAAA,UAAU,EAAEoB,IAArC;AAA2C,MAAA,QAAQ,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;KAPuBK,M","sourcesContent":["import { Table } from 'antd';\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        filters: [\r\n            {\r\n                text: 'Joe',\r\n                value: 'Joe',\r\n            },\r\n            {\r\n                text: 'Category 1',\r\n                value: 'Category 1',\r\n                children: [\r\n                    {\r\n                        text: 'Yellow',\r\n                        value: 'Yellow',\r\n                    },\r\n                    {\r\n                        text: 'Pink',\r\n                        value: 'Pink',\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                text: 'Category 2',\r\n                value: 'Category 2',\r\n                children: [\r\n                    {\r\n                        text: 'Green',\r\n                        value: 'Green',\r\n                    },\r\n                    {\r\n                        text: 'Black',\r\n                        value: 'Black',\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n        filterMode: 'tree',\r\n        filterSearch: true,\r\n        onFilter: (value, record) => record.name.includes(value),\r\n        width: '30%',\r\n    },\r\n    {\r\n        title: 'Age',\r\n        dataIndex: 'age',\r\n        sorter: (a, b) => a.age - b.age,\r\n    },\r\n    {\r\n        title: 'Address',\r\n        dataIndex: 'address',\r\n        filters: [\r\n            {\r\n                text: 'London',\r\n                value: 'London',\r\n            },\r\n            {\r\n                text: 'New York',\r\n                value: 'New York',\r\n            },\r\n        ],\r\n        onFilter: (value, record) => record.address.startsWith(value),\r\n        filterSearch: true,\r\n        width: '40%',\r\n    },\r\n];\r\n\r\nconst data = [\r\n    {\r\n        key: '1',\r\n        name: 'John Brown',\r\n        age: 32,\r\n        address: 'New York No. 1 Lake Park',\r\n    },\r\n    {\r\n        key: '2',\r\n        name: 'Jim Green',\r\n        age: 42,\r\n        address: 'London No. 1 Lake Park',\r\n    },\r\n    {\r\n        key: '3',\r\n        name: 'Joe Black',\r\n        age: 32,\r\n        address: 'Sidney No. 1 Lake Park',\r\n    },\r\n    {\r\n        key: '4',\r\n        name: 'Jim Red',\r\n        age: 32,\r\n        address: 'London No. 2 Lake Park',\r\n    },\r\n];\r\n\r\nfunction onChange(pagination, filters, sorter, extra) {\r\n    console.log('params', pagination, filters, sorter, extra);\r\n}\r\n\r\nexport default function Table7() {\r\n    return (\r\n        <div>\r\n            <Table columns={columns} dataSource={data} onChange={onChange} />\r\n\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}