{"ast":null,"code":"import \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/select/style/css\";\nimport _Select from \"antd/es/select\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\antd-demo\\\\src\\\\components\\\\Form2.jsx\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = _Select;\nconst layout = {\n  labelCol: {\n    span: 5\n  },\n  wrapperCol: {\n    span: 8\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\nexport default _s(() => {\n  _s();\n\n  const [form] = _Form.useForm();\n\n  const onGenderChange = value => {\n    switch (value) {\n      case 'male':\n        form.setFieldsValue({\n          note: 'Hi, man!'\n        });\n        return;\n\n      case 'female':\n        form.setFieldsValue({\n          note: 'Hi, lady!'\n        });\n        return;\n\n      case 'other':\n        form.setFieldsValue({\n          note: 'Hi there!'\n        });\n    }\n  };\n\n  const onFinish = values => {\n    console.log(values);\n  };\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  const onFill = () => {\n    form.setFieldsValue({\n      note: 'Hello world!',\n      gender: 'male'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Form, { ...layout,\n    form: form,\n    name: \"control-hooks\",\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n      name: \"note\",\n      label: \"Note\",\n      rules: [{\n        required: true\n      }],\n      children: /*#__PURE__*/_jsxDEV(_Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n      name: \"gender\",\n      label: \"Gender\",\n      rules: [{\n        required: true\n      }],\n      children: /*#__PURE__*/_jsxDEV(_Select, {\n        placeholder: \"Select a option and change input text above\",\n        onChange: onGenderChange,\n        allowClear: true,\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          value: \"male\",\n          children: \"male\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"female\",\n          children: \"female\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"other\",\n          children: \"other\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n      noStyle: true,\n      shouldUpdate: (prevValues, currentValues) => prevValues.gender !== currentValues.gender,\n      children: ({\n        getFieldValue\n      }) => getFieldValue('gender') === 'other' ? /*#__PURE__*/_jsxDEV(_Form.Item, {\n        name: \"customizeGender\",\n        label: \"Customize Gender\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(_Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Form.Item, { ...tailLayout,\n      children: [/*#__PURE__*/_jsxDEV(_Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Button, {\n        htmlType: \"button\",\n        onClick: onReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Button, {\n        type: \"link\",\n        htmlType: \"button\",\n        onClick: onFill,\n        children: \"Fill form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [_Form.useForm];\n});","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/antd-demo/src/components/Form2.jsx"],"names":["Option","layout","labelCol","span","wrapperCol","tailLayout","offset","form","useForm","onGenderChange","value","setFieldsValue","note","onFinish","values","console","log","onReset","resetFields","onFill","gender","required","prevValues","currentValues","getFieldValue"],"mappings":"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","sourcesContent":["import { Form, Input, Button, Select } from 'antd';\r\nconst { Option } = Select;\r\nconst layout = {\r\n    labelCol: {\r\n        span: 5,\r\n    },\r\n    wrapperCol: {\r\n        span: 8,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 8,\r\n        span: 16,\r\n    },\r\n};\r\n\r\nexport default () => {\r\n    const [form] = Form.useForm();\r\n\r\n    const onGenderChange = (value) => {\r\n        switch (value) {\r\n            case 'male':\r\n                form.setFieldsValue({\r\n                    note: 'Hi, man!',\r\n                });\r\n                return;\r\n\r\n            case 'female':\r\n                form.setFieldsValue({\r\n                    note: 'Hi, lady!',\r\n                });\r\n                return;\r\n\r\n            case 'other':\r\n                form.setFieldsValue({\r\n                    note: 'Hi there!',\r\n                });\r\n        }\r\n    };\r\n\r\n    const onFinish = (values) => {\r\n        console.log(values);\r\n    };\r\n\r\n    const onReset = () => {\r\n        form.resetFields();\r\n    };\r\n\r\n    const onFill = () => {\r\n        form.setFieldsValue({\r\n            note: 'Hello world!',\r\n            gender: 'male',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Form {...layout} form={form} name=\"control-hooks\" onFinish={onFinish}>\r\n            <Form.Item\r\n                name=\"note\"\r\n                label=\"Note\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"gender\"\r\n                label=\"Gender\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <Select\r\n                    placeholder=\"Select a option and change input text above\"\r\n                    onChange={onGenderChange}\r\n                    allowClear\r\n                >\r\n                    <Option value=\"male\">male</Option>\r\n                    <Option value=\"female\">female</Option>\r\n                    <Option value=\"other\">other</Option>\r\n                </Select>\r\n            </Form.Item>\r\n            <Form.Item\r\n                noStyle\r\n                shouldUpdate={(prevValues, currentValues) => prevValues.gender !== currentValues.gender}\r\n            >\r\n                {({ getFieldValue }) =>\r\n                    getFieldValue('gender') === 'other' ? (\r\n                        <Form.Item\r\n                            name=\"customizeGender\"\r\n                            label=\"Customize Gender\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                    ) : null\r\n                }\r\n            </Form.Item>\r\n            <Form.Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                </Button>\r\n                <Button htmlType=\"button\" onClick={onReset}>\r\n                    Reset\r\n                </Button>\r\n                <Button type=\"link\" htmlType=\"button\" onClick={onFill}>\r\n                    Fill form\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}