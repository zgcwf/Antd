{"ast":null,"code":"import \"antd/es/tree/style/css\";\nimport _Tree from \"antd/es/tree\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\antd-demo\\\\src\\\\components\\\\Tree2.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst treeData = [{\n  title: '0-0',\n  key: '0-0',\n  children: [{\n    title: '0-0-0',\n    key: '0-0-0',\n    children: [{\n      title: '0-0-0-0',\n      key: '0-0-0-0'\n    }, {\n      title: '0-0-0-1',\n      key: '0-0-0-1'\n    }, {\n      title: '0-0-0-2',\n      key: '0-0-0-2'\n    }]\n  }, {\n    title: '0-0-1',\n    key: '0-0-1',\n    children: [{\n      title: '0-0-1-0',\n      key: '0-0-1-0'\n    }, {\n      title: '0-0-1-1',\n      key: '0-0-1-1'\n    }, {\n      title: '0-0-1-2',\n      key: '0-0-1-2'\n    }]\n  }, {\n    title: '0-0-2',\n    key: '0-0-2'\n  }]\n}, {\n  title: '0-1',\n  key: '0-1',\n  children: [{\n    title: '0-1-0-0',\n    key: '0-1-0-0'\n  }, {\n    title: '0-1-0-1',\n    key: '0-1-0-1'\n  }, {\n    title: '0-1-0-2',\n    key: '0-1-0-2'\n  }]\n}, {\n  title: '0-2',\n  key: '0-2'\n}];\nexport default _s(() => {\n  _s();\n\n  const [expandedKeys, setExpandedKeys] = useState(['0-0-0', '0-0-1']);\n  const [checkedKeys, setCheckedKeys] = useState(['0-0-0']);\n  const [selectedKeys, setSelectedKeys] = useState([]);\n  const [autoExpandParent, setAutoExpandParent] = useState(true); // 展开/收起节点时触发\n\n  const onExpand = expandedKeysValue => {\n    console.log('onExpand', expandedKeysValue); // if not set autoExpandParent to false, if children expanded, parent can not collapse.\n    // or, you can remove all expanded children keys.\n\n    setExpandedKeys(expandedKeysValue);\n    setAutoExpandParent(false);\n  }; // 点击复选框触发\n\n\n  const onCheck = checkedKeysValue => {\n    console.log('onCheck', checkedKeysValue);\n    setCheckedKeys(checkedKeysValue);\n  }; // 点击树节点触发\n\n\n  const onSelect = (selectedKeysValue, info) => {\n    console.log('onSelect', info);\n    setSelectedKeys(selectedKeysValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Tree, {\n    checkable: true,\n    onExpand: onExpand,\n    expandedKeys: expandedKeys,\n    autoExpandParent: autoExpandParent,\n    onCheck: onCheck,\n    checkedKeys: checkedKeys,\n    onSelect: onSelect,\n    selectedKeys: selectedKeys,\n    treeData: treeData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}, \"iPXAFk0rdUMzjwyCmW4evTgc9JM=\");","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/antd-demo/src/components/Tree2.jsx"],"names":["React","useState","treeData","title","key","children","expandedKeys","setExpandedKeys","checkedKeys","setCheckedKeys","selectedKeys","setSelectedKeys","autoExpandParent","setAutoExpandParent","onExpand","expandedKeysValue","console","log","onCheck","checkedKeysValue","onSelect","selectedKeysValue","info"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Tree } from 'antd';\r\nconst treeData = [\r\n    {\r\n        title: '0-0',\r\n        key: '0-0',\r\n        children: [\r\n            {\r\n                title: '0-0-0',\r\n                key: '0-0-0',\r\n                children: [\r\n                    {\r\n                        title: '0-0-0-0',\r\n                        key: '0-0-0-0',\r\n                    },\r\n                    {\r\n                        title: '0-0-0-1',\r\n                        key: '0-0-0-1',\r\n                    },\r\n                    {\r\n                        title: '0-0-0-2',\r\n                        key: '0-0-0-2',\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                title: '0-0-1',\r\n                key: '0-0-1',\r\n                children: [\r\n                    {\r\n                        title: '0-0-1-0',\r\n                        key: '0-0-1-0',\r\n                    },\r\n                    {\r\n                        title: '0-0-1-1',\r\n                        key: '0-0-1-1',\r\n                    },\r\n                    {\r\n                        title: '0-0-1-2',\r\n                        key: '0-0-1-2',\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                title: '0-0-2',\r\n                key: '0-0-2',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        title: '0-1',\r\n        key: '0-1',\r\n        children: [\r\n            {\r\n                title: '0-1-0-0',\r\n                key: '0-1-0-0',\r\n            },\r\n            {\r\n                title: '0-1-0-1',\r\n                key: '0-1-0-1',\r\n            },\r\n            {\r\n                title: '0-1-0-2',\r\n                key: '0-1-0-2',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        title: '0-2',\r\n        key: '0-2',\r\n    },\r\n];\r\n\r\nexport default () => {\r\n    const [expandedKeys, setExpandedKeys] = useState(['0-0-0', '0-0-1']);\r\n    const [checkedKeys, setCheckedKeys] = useState(['0-0-0']);\r\n    const [selectedKeys, setSelectedKeys] = useState([]);\r\n    const [autoExpandParent, setAutoExpandParent] = useState(true);\r\n    // 展开/收起节点时触发\r\n    const onExpand = (expandedKeysValue) => {\r\n        console.log('onExpand', expandedKeysValue); // if not set autoExpandParent to false, if children expanded, parent can not collapse.\r\n        // or, you can remove all expanded children keys.\r\n\r\n        setExpandedKeys(expandedKeysValue);\r\n        setAutoExpandParent(false);\r\n    };\r\n    // 点击复选框触发\r\n    const onCheck = (checkedKeysValue) => {\r\n        console.log('onCheck', checkedKeysValue);\r\n        setCheckedKeys(checkedKeysValue);\r\n    };\r\n    // 点击树节点触发\r\n    const onSelect = (selectedKeysValue, info) => {\r\n        console.log('onSelect', info);\r\n        setSelectedKeys(selectedKeysValue);\r\n    };\r\n\r\n    return (\r\n        <Tree\r\n            checkable\r\n            onExpand={onExpand}\r\n            expandedKeys={expandedKeys}\r\n            autoExpandParent={autoExpandParent}\r\n            onCheck={onCheck}\r\n            checkedKeys={checkedKeys}\r\n            onSelect={onSelect}\r\n            selectedKeys={selectedKeys}\r\n            treeData={treeData}\r\n        />\r\n    );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}