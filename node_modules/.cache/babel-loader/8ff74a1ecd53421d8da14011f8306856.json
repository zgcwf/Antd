{"ast":null,"code":"import \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/steps/style/css\";\nimport _Steps from \"antd/es/steps\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\antd-demo\\\\src\\\\components\\\\Steps.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Step\n} = _Steps;\nconst steps = [{\n  title: 'First',\n  content: 'First-content'\n}, {\n  title: 'Second',\n  content: 'Second-content'\n}, {\n  title: 'Last',\n  content: 'Last-content'\n}];\nexport default _s(() => {\n  _s();\n\n  const [current, setCurrent] = React.useState(0);\n\n  const next = () => {\n    setCurrent(current + 1);\n  };\n\n  const prev = () => {\n    setCurrent(current - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Steps, {\n      current: current,\n      children: steps.map(item => /*#__PURE__*/_jsxDEV(Step, {\n        title: item.title\n      }, item.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"steps-content\",\n      children: steps[current].content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"steps-action\",\n      children: [current < steps.length - 1 && /*#__PURE__*/_jsxDEV(_Button, {\n        type: \"primary\",\n        onClick: () => next(),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), current === steps.length - 1 && /*#__PURE__*/_jsxDEV(_Button, {\n        type: \"primary\",\n        onClick: () => _message.success('Processing complete!'),\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), current > 0 && /*#__PURE__*/_jsxDEV(_Button, {\n        style: {\n          margin: '0 8px'\n        },\n        onClick: () => prev(),\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Steps, {\n        current: 2,\n        status: \"error\",\n        children: [/*#__PURE__*/_jsxDEV(Step, {\n          title: \"Finished\",\n          description: \"This is a description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Step, {\n          title: \"In Process\",\n          description: \"This is a description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Step, {\n          title: \"Waiting\",\n          description: \"This is a description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), \",\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}, \"8+O75ArtRNvpQgzeZSk5wKohTHI=\");","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/antd-demo/src/components/Steps.jsx"],"names":["React","Component","Step","steps","title","content","current","setCurrent","useState","next","prev","map","item","length","success","margin"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAKA,MAAM;AAAEC,EAAAA;AAAF,UAAN;AAEA,MAAMC,KAAK,GAAG,CACV;AACIC,EAAAA,KAAK,EAAE,OADX;AAEIC,EAAAA,OAAO,EAAE;AAFb,CADU,EAKV;AACID,EAAAA,KAAK,EAAE,QADX;AAEIC,EAAAA,OAAO,EAAE;AAFb,CALU,EASV;AACID,EAAAA,KAAK,EAAE,MADX;AAEIC,EAAAA,OAAO,EAAE;AAFb,CATU,CAAd;AAeA,kBAAe,MAAM;AAAA;;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,KAAK,CAACQ,QAAN,CAAe,CAAf,CAA9B;;AAEA,QAAMC,IAAI,GAAG,MAAM;AACfF,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACH,GAFD;;AAIA,QAAMI,IAAI,GAAG,MAAM;AACfH,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAO,MAAA,OAAO,EAAEA,OAAhB;AAAA,gBACKH,KAAK,CAACQ,GAAN,CAAUC,IAAI,iBACX,QAAC,IAAD;AAAuB,QAAA,KAAK,EAAEA,IAAI,CAACR;AAAnC,SAAWQ,IAAI,CAACR,KAAhB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBAAgCD,KAAK,CAACG,OAAD,CAAL,CAAeD;AAA/C;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,iBACKC,OAAO,GAAGH,KAAK,CAACU,MAAN,GAAe,CAAzB,iBACG;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,OAAO,EAAE,MAAMJ,IAAI,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFR,EAMKH,OAAO,KAAKH,KAAK,CAACU,MAAN,GAAe,CAA3B,iBACG;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,OAAO,EAAE,MAAM,SAAQC,OAAR,CAAgB,sBAAhB,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPR,EAWKR,OAAO,GAAG,CAAV,iBACG;AAAQ,QAAA,KAAK,EAAE;AAAES,UAAAA,MAAM,EAAE;AAAV,SAAf;AAAoC,QAAA,OAAO,EAAE,MAAML,IAAI,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZR,eAgBI;AAAA;AAAA;AAAA;AAAA,cAhBJ,eAiBI;AAAO,QAAA,OAAO,EAAE,CAAhB;AAAmB,QAAA,MAAM,EAAC,OAA1B;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,UAAZ;AAAuB,UAAA,WAAW,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,YAAZ;AAAyB,UAAA,WAAW,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,SAAZ;AAAsB,UAAA,WAAW,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AAiCH,CA5CD","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport { Steps, Button, message } from 'antd';\r\n\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n    {\r\n        title: 'First',\r\n        content: 'First-content',\r\n    },\r\n    {\r\n        title: 'Second',\r\n        content: 'Second-content',\r\n    },\r\n    {\r\n        title: 'Last',\r\n        content: 'Last-content',\r\n    },\r\n];\r\n\r\nexport default () => {\r\n    const [current, setCurrent] = React.useState(0);\r\n\r\n    const next = () => {\r\n        setCurrent(current + 1);\r\n    };\r\n\r\n    const prev = () => {\r\n        setCurrent(current - 1);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Steps current={current}>\r\n                {steps.map(item => (\r\n                    <Step key={item.title} title={item.title} />\r\n                ))}\r\n            </Steps>\r\n            <div className=\"steps-content\">{steps[current].content}</div>\r\n            <div className=\"steps-action\">\r\n                {current < steps.length - 1 && (\r\n                    <Button type=\"primary\" onClick={() => next()}>\r\n                        Next\r\n                    </Button>\r\n                )}\r\n                {current === steps.length - 1 && (\r\n                    <Button type=\"primary\" onClick={() => message.success('Processing complete!')}>\r\n                        Done\r\n                    </Button>\r\n                )}\r\n                {current > 0 && (\r\n                    <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\r\n                        Previous\r\n                    </Button>\r\n                )}\r\n                <hr />\r\n                <Steps current={2} status=\"error\">\r\n                    <Step title=\"Finished\" description=\"This is a description\" />\r\n                    <Step title=\"In Process\" description=\"This is a description\" />\r\n                    <Step title=\"Waiting\" description=\"This is a description\" />\r\n                </Steps>,\r\n            </div>\r\n        </>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}