{"ast":null,"code":"import \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/divider/style/css\";\nimport _Divider from \"antd/es/divider\";\nimport \"antd/es/radio/style/css\";\nimport _Radio from \"antd/es/radio\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\antd-demo\\\\src\\\\components\\\\Table3.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  render: text => /*#__PURE__*/_jsxDEV(\"a\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 27\n  }, this)\n}, {\n  title: 'Age',\n  dataIndex: 'age'\n}, {\n  title: 'Address',\n  dataIndex: 'address'\n}];\nconst data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  address: 'New York No. 1 Lake Park'\n}, {\n  key: '2',\n  name: 'Jim Green',\n  age: 42,\n  address: 'London No. 1 Lake Park'\n}, {\n  key: '3',\n  name: 'Joe Black',\n  age: 32,\n  address: 'Sidney No. 1 Lake Park'\n}, {\n  key: '4',\n  name: 'Disabled User',\n  age: 99,\n  address: 'Sidney No. 1 Lake Park'\n}]; // rowSelection object indicates the need for row selection\n\nconst rowSelection = {\n  onChange: (selectedRowKeys, selectedRows) => {\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n  },\n  getCheckboxProps: record => ({\n    disabled: record.name === 'Disabled User',\n    // Column configuration not to be checked\n    name: record.name\n  })\n};\n\nconst Demo = () => {\n  _s();\n\n  const [selectionType, setSelectionType] = useState('checkbox');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(_Radio.Group, {\n      onChange: ({\n        target: {\n          value\n        }\n      }) => {\n        setSelectionType(value);\n      },\n      value: selectionType,\n      children: [/*#__PURE__*/_jsxDEV(_Radio, {\n        value: \"checkbox\",\n        children: \"Checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Radio, {\n        value: \"radio\",\n        children: \"radio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Table, {\n      rowSelection: {\n        type: selectionType,\n        ...rowSelection\n      },\n      columns: columns,\n      dataSource: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Demo, \"uKhWbRYZh0yYhpJtLsBDfeqd9AU=\");\n\n_c = Demo;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Demo, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 84,\n  columnNumber: 17\n}, this), mountNode);\n\nvar _c;\n\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/antd-demo/src/components/Table3.jsx"],"names":["React","useState","columns","title","dataIndex","render","text","data","key","name","age","address","rowSelection","onChange","selectedRowKeys","selectedRows","console","log","getCheckboxProps","record","disabled","Demo","selectionType","setSelectionType","target","value","type","ReactDOM","mountNode"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,OAAO,GAAG,CACZ;AACIC,EAAAA,KAAK,EAAE,MADX;AAEIC,EAAAA,SAAS,EAAE,MAFf;AAGIC,EAAAA,MAAM,EAAGC,IAAD,iBAAU;AAAA,cAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA;AAHtB,CADY,EAMZ;AACIH,EAAAA,KAAK,EAAE,KADX;AAEIC,EAAAA,SAAS,EAAE;AAFf,CANY,EAUZ;AACID,EAAAA,KAAK,EAAE,SADX;AAEIC,EAAAA,SAAS,EAAE;AAFf,CAVY,CAAhB;AAeA,MAAMG,IAAI,GAAG,CACT;AACIC,EAAAA,GAAG,EAAE,GADT;AAEIC,EAAAA,IAAI,EAAE,YAFV;AAGIC,EAAAA,GAAG,EAAE,EAHT;AAIIC,EAAAA,OAAO,EAAE;AAJb,CADS,EAOT;AACIH,EAAAA,GAAG,EAAE,GADT;AAEIC,EAAAA,IAAI,EAAE,WAFV;AAGIC,EAAAA,GAAG,EAAE,EAHT;AAIIC,EAAAA,OAAO,EAAE;AAJb,CAPS,EAaT;AACIH,EAAAA,GAAG,EAAE,GADT;AAEIC,EAAAA,IAAI,EAAE,WAFV;AAGIC,EAAAA,GAAG,EAAE,EAHT;AAIIC,EAAAA,OAAO,EAAE;AAJb,CAbS,EAmBT;AACIH,EAAAA,GAAG,EAAE,GADT;AAEIC,EAAAA,IAAI,EAAE,eAFV;AAGIC,EAAAA,GAAG,EAAE,EAHT;AAIIC,EAAAA,OAAO,EAAE;AAJb,CAnBS,CAAb,C,CAyBG;;AAEH,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,CAACC,eAAD,EAAkBC,YAAlB,KAAmC;AACzCC,IAAAA,OAAO,CAACC,GAAR,CAAa,oBAAmBH,eAAgB,EAAhD,EAAmD,gBAAnD,EAAqEC,YAArE;AACH,GAHgB;AAIjBG,EAAAA,gBAAgB,EAAGC,MAAD,KAAa;AAC3BC,IAAAA,QAAQ,EAAED,MAAM,CAACV,IAAP,KAAgB,eADC;AAE3B;AACAA,IAAAA,IAAI,EAAEU,MAAM,CAACV;AAHc,GAAb;AAJD,CAArB;;AAWA,MAAMY,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCtB,QAAQ,CAAC,UAAD,CAAlD;AACA,sBACI;AAAA,4BACI,eAAO,KAAP;AACI,MAAA,QAAQ,EAAE,CAAC;AAAEuB,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV,OAAD,KAA2B;AACjCF,QAAAA,gBAAgB,CAACE,KAAD,CAAhB;AACH,OAHL;AAII,MAAA,KAAK,EAAEH,aAJX;AAAA,8BAMI;AAAO,QAAA,KAAK,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAO,QAAA,KAAK,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI;AAAA;AAAA;AAAA;AAAA,YAXJ,eAaI;AACI,MAAA,YAAY,EAAE;AACVI,QAAAA,IAAI,EAAEJ,aADI;AAEV,WAAGV;AAFO,OADlB;AAKI,MAAA,OAAO,EAAEV,OALb;AAMI,MAAA,UAAU,EAAEK;AANhB;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CA1BD;;GAAMc,I;;KAAAA,I;AA4BNM,QAAQ,CAACtB,MAAT,eAAgB,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA0BuB,SAA1B","sourcesContent":["import React, { useState } from 'react';\r\nimport { Table, Radio, Divider } from 'antd';\r\nconst columns = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        render: (text) => <a>{text}</a>,\r\n    },\r\n    {\r\n        title: 'Age',\r\n        dataIndex: 'age',\r\n    },\r\n    {\r\n        title: 'Address',\r\n        dataIndex: 'address',\r\n    },\r\n];\r\nconst data = [\r\n    {\r\n        key: '1',\r\n        name: 'John Brown',\r\n        age: 32,\r\n        address: 'New York No. 1 Lake Park',\r\n    },\r\n    {\r\n        key: '2',\r\n        name: 'Jim Green',\r\n        age: 42,\r\n        address: 'London No. 1 Lake Park',\r\n    },\r\n    {\r\n        key: '3',\r\n        name: 'Joe Black',\r\n        age: 32,\r\n        address: 'Sidney No. 1 Lake Park',\r\n    },\r\n    {\r\n        key: '4',\r\n        name: 'Disabled User',\r\n        age: 99,\r\n        address: 'Sidney No. 1 Lake Park',\r\n    },\r\n]; // rowSelection object indicates the need for row selection\r\n\r\nconst rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n        console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n    },\r\n    getCheckboxProps: (record) => ({\r\n        disabled: record.name === 'Disabled User',\r\n        // Column configuration not to be checked\r\n        name: record.name,\r\n    }),\r\n};\r\n\r\nconst Demo = () => {\r\n    const [selectionType, setSelectionType] = useState('checkbox');\r\n    return (\r\n        <div>\r\n            <Radio.Group\r\n                onChange={({ target: { value } }) => {\r\n                    setSelectionType(value);\r\n                }}\r\n                value={selectionType}\r\n            >\r\n                <Radio value=\"checkbox\">Checkbox</Radio>\r\n                <Radio value=\"radio\">radio</Radio>\r\n            </Radio.Group>\r\n\r\n            <Divider />\r\n\r\n            <Table\r\n                rowSelection={{\r\n                    type: selectionType,\r\n                    ...rowSelection,\r\n                }}\r\n                columns={columns}\r\n                dataSource={data}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nReactDOM.render(<Demo />, mountNode);"]},"metadata":{},"sourceType":"module"}