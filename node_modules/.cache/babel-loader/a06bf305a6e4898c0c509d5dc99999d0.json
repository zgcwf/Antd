{"ast":null,"code":"import \"antd/es/auto-complete/style/css\";\nimport _AutoComplete from \"antd/es/auto-complete\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\antd-demo\\\\src\\\\components\\\\AutoComplete.jsx\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// 基本使用\n// const mockVal = (str, repeat = 1) => ({\n//     value: str.repeat(repeat),\n//     // value：输入的字符串重复几次，默认一次\n// });\n// export default () => {\n//     const [value, setValue] = useState('');\n//     const [options, setOptions] = useState([]);\n//     const onSearch = (searchText) => {\n//         // 搜索时输入框中的内容\n//         setOptions(\n//             !searchText ? [] : [mockVal(searchText), mockVal(searchText, 2), mockVal(searchText, 3)],\n//         );\n//         console.log('onSearch', options);\n//     };\n//     const onSelect = (data) => {\n//         //option项被选中时调用，参数为选中项的 value 值\n//         console.log('onSelect', data);\n//     };\n//     const onChange = (data) => {\n//         // 选中 option项，或 input 的 value 变化时，调用此函数\n//         console.log('onChange', data);\n//         setValue(data);\n//     };\n//     return (\n//         <>\n//             {/*options：选项内容 */}\n//             <AutoComplete\n//                 options={options}\n//                 style={{\n//                     width: 200,\n//                 }}\n//                 onSelect={onSelect}\n//                 onSearch={onSearch}\n//                 placeholder=\"input here\"\n//             />\n//             <br />\n//             <br />\n//             {/* value：指定当前选中的条目 */}\n//             <AutoComplete\n//                 value={value}\n//                 options={options}\n//                 style={{\n//                     width: 200,\n//                 }}\n//                 onSelect={onSelect}\n//                 onSearch={onSearch}\n//                 onChange={onChange}\n//                 placeholder=\"control mode\"\n//             />\n//         </>\n//     );\n// };\n// 自定义\n// const { Option } = AutoComplete;\n// export default () => {\n//     const [result, setResult] = useState([]);\n//     const handleSearch = (value) => {\n//         let res = [];\n//         if (!value || value.indexOf('@') >= 0) {\n//             res = [];\n//         } else {\n//             res = ['gmail.com', '163.com', 'qq.com'].map((domain) => `${value}@${domain}`);\n//         }\n//         setResult(res);\n//     };\n//     return (\n//         <AutoComplete\n//             style={{\n//                 width: 200,\n//             }}\n//             onSearch={handleSearch}\n//             placeholder=\"input here\"\n//         >\n//             {result.map((email) => (\n//                 <Option key={email} value={email}>\n//                     {email}\n//                 </Option>\n//             ))}\n//         </AutoComplete>\n//     );\n// };\n// 不区分大小写\nconst options = [{\n  value: 'Burns Bay Road'\n}, {\n  value: 'Downing Street'\n}, {\n  value: 'Wall Street'\n}];\nexport default (() => /*#__PURE__*/_jsxDEV(_AutoComplete, {\n  style: {\n    width: 200\n  },\n  options: options,\n  placeholder: \"try to type `b`\",\n  filterOption: (inputValue, option) => option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 113,\n  columnNumber: 5\n}, this));","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/antd-demo/src/components/AutoComplete.jsx"],"names":["React","useState","options","value","width","inputValue","option","toUpperCase","indexOf"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,MAAMC,OAAO,GAAG,CACZ;AACIC,EAAAA,KAAK,EAAE;AADX,CADY,EAIZ;AACIA,EAAAA,KAAK,EAAE;AADX,CAJY,EAOZ;AACIA,EAAAA,KAAK,EAAE;AADX,CAPY,CAAhB;AAYA,gBAAe,mBACX;AACI,EAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE;AADJ,GADX;AAII,EAAA,OAAO,EAAEF,OAJb;AAKI,EAAA,WAAW,EAAC,iBALhB;AAMI,EAAA,YAAY,EAAE,CAACG,UAAD,EAAaC,MAAb,KACVA,MAAM,CAACH,KAAP,CAAaI,WAAb,GAA2BC,OAA3B,CAAmCH,UAAU,CAACE,WAAX,EAAnC,MAAiE,CAAC;AAP1E;AAAA;AAAA;AAAA;AAAA,QADJ","sourcesContent":["import React, { useState } from 'react';\r\nimport { AutoComplete } from 'antd';\r\n// 基本使用\r\n\r\n// const mockVal = (str, repeat = 1) => ({\r\n//     value: str.repeat(repeat),\r\n//     // value：输入的字符串重复几次，默认一次\r\n// });\r\n\r\n// export default () => {\r\n//     const [value, setValue] = useState('');\r\n//     const [options, setOptions] = useState([]);\r\n\r\n//     const onSearch = (searchText) => {\r\n//         // 搜索时输入框中的内容\r\n//         setOptions(\r\n//             !searchText ? [] : [mockVal(searchText), mockVal(searchText, 2), mockVal(searchText, 3)],\r\n//         );\r\n//         console.log('onSearch', options);\r\n//     };\r\n\r\n//     const onSelect = (data) => {\r\n//         //option项被选中时调用，参数为选中项的 value 值\r\n//         console.log('onSelect', data);\r\n//     };\r\n\r\n//     const onChange = (data) => {\r\n//         // 选中 option项，或 input 的 value 变化时，调用此函数\r\n//         console.log('onChange', data);\r\n\r\n//         setValue(data);\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n//             {/*options：选项内容 */}\r\n//             <AutoComplete\r\n//                 options={options}\r\n//                 style={{\r\n//                     width: 200,\r\n//                 }}\r\n//                 onSelect={onSelect}\r\n//                 onSearch={onSearch}\r\n//                 placeholder=\"input here\"\r\n//             />\r\n//             <br />\r\n//             <br />\r\n//             {/* value：指定当前选中的条目 */}\r\n//             <AutoComplete\r\n//                 value={value}\r\n//                 options={options}\r\n//                 style={{\r\n//                     width: 200,\r\n//                 }}\r\n//                 onSelect={onSelect}\r\n//                 onSearch={onSearch}\r\n//                 onChange={onChange}\r\n//                 placeholder=\"control mode\"\r\n//             />\r\n//         </>\r\n//     );\r\n// };\r\n\r\n// 自定义\r\n// const { Option } = AutoComplete;\r\n\r\n// export default () => {\r\n//     const [result, setResult] = useState([]);\r\n\r\n//     const handleSearch = (value) => {\r\n//         let res = [];\r\n\r\n//         if (!value || value.indexOf('@') >= 0) {\r\n//             res = [];\r\n//         } else {\r\n//             res = ['gmail.com', '163.com', 'qq.com'].map((domain) => `${value}@${domain}`);\r\n//         }\r\n\r\n//         setResult(res);\r\n//     };\r\n\r\n//     return (\r\n//         <AutoComplete\r\n//             style={{\r\n//                 width: 200,\r\n//             }}\r\n//             onSearch={handleSearch}\r\n//             placeholder=\"input here\"\r\n//         >\r\n//             {result.map((email) => (\r\n//                 <Option key={email} value={email}>\r\n//                     {email}\r\n//                 </Option>\r\n//             ))}\r\n//         </AutoComplete>\r\n//     );\r\n// };\r\n\r\n// 不区分大小写\r\nconst options = [\r\n    {\r\n        value: 'Burns Bay Road',\r\n    },\r\n    {\r\n        value: 'Downing Street',\r\n    },\r\n    {\r\n        value: 'Wall Street',\r\n    },\r\n];\r\n\r\nexport default () => (\r\n    <AutoComplete\r\n        style={{\r\n            width: 200,\r\n        }}\r\n        options={options}\r\n        placeholder=\"try to type `b`\"\r\n        filterOption={(inputValue, option) =>\r\n            option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n        }\r\n    />\r\n);"]},"metadata":{},"sourceType":"module"}