{"ast":null,"code":"import \"antd/es/auto-complete/style/css\";\nimport _AutoComplete from \"antd/es/auto-complete\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\antd-demo\\\\src\\\\components\\\\AutoComplete.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst mockVal = (str, repeat = 1) => ({\n  value: str.repeat(repeat)\n});\n\nexport default _s(() => {\n  _s();\n\n  const [value, setValue] = useState('');\n  const [options, setOptions] = useState([]);\n\n  const onSearch = searchText => {\n    console.log('onSearch', searchText);\n    setOptions(!searchText ? [] : [mockVal(searchText), mockVal(searchText, 2), mockVal(searchText, 3)]);\n  };\n\n  const onSelect = data => {\n    console.log('onSelect', data);\n  };\n\n  const onChange = data => {\n    console.log('onChange', data);\n    setValue(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_AutoComplete, {\n      options: options,\n      style: {\n        width: 200\n      },\n      onSelect: onSelect,\n      onSearch: onSearch,\n      placeholder: \"input here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_AutoComplete, {\n      value: value,\n      options: options,\n      style: {\n        width: 200\n      },\n      onSelect: onSelect,\n      onSearch: onSearch,\n      onChange: onChange,\n      placeholder: \"control mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}, \"v46XHfbga7+ACBCaAAs6a3dBp/s=\");","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/antd-demo/src/components/AutoComplete.jsx"],"names":["React","useState","mockVal","str","repeat","value","setValue","options","setOptions","onSearch","searchText","console","log","onSelect","data","onChange","width"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAGA,MAAMC,OAAO,GAAG,CAACC,GAAD,EAAMC,MAAM,GAAG,CAAf,MAAsB;AAClCC,EAAAA,KAAK,EAAEF,GAAG,CAACC,MAAJ,CAAWA,MAAX;AAD2B,CAAtB,CAAhB;;AAIA,kBAAe,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMQ,QAAQ,GAAIC,UAAD,IAAgB;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,UAAxB;AACAF,IAAAA,UAAU,CACN,CAACE,UAAD,GAAc,EAAd,GAAmB,CAACR,OAAO,CAACQ,UAAD,CAAR,EAAsBR,OAAO,CAACQ,UAAD,EAAa,CAAb,CAA7B,EAA8CR,OAAO,CAACQ,UAAD,EAAa,CAAb,CAArD,CADb,CAAV;AAGH,GALD;;AAOA,QAAMG,QAAQ,GAAIC,IAAD,IAAU;AACvBH,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBE,IAAxB;AACH,GAFD;;AAIA,QAAMC,QAAQ,GAAID,IAAD,IAAU;AACvBH,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBE,IAAxB;AAEAR,IAAAA,QAAQ,CAACQ,IAAD,CAAR;AACH,GAJD;;AAMA,sBACI;AAAA,4BACI;AACI,MAAA,OAAO,EAAEP,OADb;AAEI,MAAA,KAAK,EAAE;AACHS,QAAAA,KAAK,EAAE;AADJ,OAFX;AAKI,MAAA,QAAQ,EAAEH,QALd;AAMI,MAAA,QAAQ,EAAEJ,QANd;AAOI,MAAA,WAAW,EAAC;AAPhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI;AAAA;AAAA;AAAA;AAAA,YAVJ,eAWI;AAAA;AAAA;AAAA;AAAA,YAXJ,eAYI;AACI,MAAA,KAAK,EAAEJ,KADX;AAEI,MAAA,OAAO,EAAEE,OAFb;AAGI,MAAA,KAAK,EAAE;AACHS,QAAAA,KAAK,EAAE;AADJ,OAHX;AAMI,MAAA,QAAQ,EAAEH,QANd;AAOI,MAAA,QAAQ,EAAEJ,QAPd;AAQI,MAAA,QAAQ,EAAEM,QARd;AASI,MAAA,WAAW,EAAC;AAThB;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA,kBADJ;AA0BH,CA/CD","sourcesContent":["import React, { useState } from 'react';\r\nimport { AutoComplete } from 'antd';\r\n\r\nconst mockVal = (str, repeat = 1) => ({\r\n    value: str.repeat(repeat),\r\n});\r\n\r\nexport default () => {\r\n    const [value, setValue] = useState('');\r\n    const [options, setOptions] = useState([]);\r\n\r\n    const onSearch = (searchText) => {\r\n        console.log('onSearch', searchText);\r\n        setOptions(\r\n            !searchText ? [] : [mockVal(searchText), mockVal(searchText, 2), mockVal(searchText, 3)],\r\n        );\r\n    };\r\n\r\n    const onSelect = (data) => {\r\n        console.log('onSelect', data);\r\n    };\r\n\r\n    const onChange = (data) => {\r\n        console.log('onChange', data);\r\n\r\n        setValue(data);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AutoComplete\r\n                options={options}\r\n                style={{\r\n                    width: 200,\r\n                }}\r\n                onSelect={onSelect}\r\n                onSearch={onSearch}\r\n                placeholder=\"input here\"\r\n            />\r\n            <br />\r\n            <br />\r\n            <AutoComplete\r\n                value={value}\r\n                options={options}\r\n                style={{\r\n                    width: 200,\r\n                }}\r\n                onSelect={onSelect}\r\n                onSearch={onSearch}\r\n                onChange={onChange}\r\n                placeholder=\"control mode\"\r\n            />\r\n        </>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}