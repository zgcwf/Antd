{"ast":null,"code":"import \"antd/es/typography/style/css\";\nimport _Typography from \"antd/es/typography\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\antd-demo\\\\src\\\\components\\\\Typography.jsx\";\nimport React, { useState } from 'react';\nimport { HighlightOutlined, SmileOutlined, SmileFilled } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Paragraph\n} = _Typography;\nexport default class Icons extends Component {\n  constructor(...args) {\n    var _s = $RefreshSig$();\n\n    super(...args);\n    this.Demo = _s(() => {\n      _s();\n\n      const [editableStr, setEditableStr] = useState('This is an editable text.');\n      const [customIconStr, setCustomIconStr] = useState('Custom Edit icon and replace tooltip text.');\n      const [hideTooltipStr, setHideTooltipStr] = useState('Hide Edit tooltip.');\n      const [lengthLimitedStr, setLengthLimitedStr] = useState('This is an editable text with limited length.');\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Paragraph, {\n          editable: {\n            onChange: setEditableStr\n          },\n          children: editableStr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n          editable: {\n            icon: /*#__PURE__*/_jsxDEV(HighlightOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 31\n            }, this),\n            tooltip: 'click to edit text',\n            onChange: setCustomIconStr\n          },\n          children: customIconStr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n          editable: {\n            tooltip: false,\n            onChange: setHideTooltipStr\n          },\n          children: hideTooltipStr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n          editable: {\n            onChange: setLengthLimitedStr,\n            maxLength: 50,\n            autoSize: {\n              maxRows: 5,\n              minRows: 3\n            }\n          },\n          children: lengthLimitedStr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n          copyable: true,\n          children: \"This is a copyable text.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n          copyable: {\n            text: 'Hello, Ant Design!'\n          },\n          children: \"Replace copy text.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n          copyable: {\n            icon: [/*#__PURE__*/_jsxDEV(SmileOutlined, {}, \"copy-icon\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(SmileFilled, {}, \"copied-icon\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 67\n            }, this)],\n            tooltips: ['click here', 'you clicked!!']\n          },\n          children: \"Custom Copy icon and replace tooltips text.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n          copyable: {\n            tooltips: false\n          },\n          children: \"Hide Copy tooltips.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    }, \"sd3JTvOWL6+2W2SthaoT6aMGNd0=\");\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/antd-demo/src/components/Typography.jsx"],"names":["React","useState","HighlightOutlined","SmileOutlined","SmileFilled","Paragraph","Icons","Component","Demo","editableStr","setEditableStr","customIconStr","setCustomIconStr","hideTooltipStr","setHideTooltipStr","lengthLimitedStr","setLengthLimitedStr","onChange","icon","tooltip","maxLength","autoSize","maxRows","minRows","text","tooltips"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,iBAAT,EAA4BC,aAA5B,EAA2CC,WAA3C,QAA8D,mBAA9D;;;AAEA,MAAM;AAAEC,EAAAA;AAAF,eAAN;AACA,eAAe,MAAMC,KAAN,SAAoBC,SAApB,CAA8B;AAAA;AAAA;;AAAA;AAAA,SACzCC,IADyC,MAClC,MAAM;AAAA;;AACT,YAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,2BAAD,CAA9C;AACA,YAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,4CAAD,CAAlD;AACA,YAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,oBAAD,CAApD;AACA,YAAM,CAACc,gBAAD,EAAmBC,mBAAnB,IAA0Cf,QAAQ,CACpD,+CADoD,CAAxD;AAIA,0BACI;AAAA,gCACI,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAE;AAAEgB,YAAAA,QAAQ,EAAEP;AAAZ,WAArB;AAAA,oBAAoDD;AAApD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,SAAD;AACI,UAAA,QAAQ,EAAE;AACNS,YAAAA,IAAI,eAAE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,oBADA;AAENC,YAAAA,OAAO,EAAE,oBAFH;AAGNF,YAAAA,QAAQ,EAAEL;AAHJ,WADd;AAAA,oBAOKD;AAPL;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAWI,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAE;AAAEQ,YAAAA,OAAO,EAAE,KAAX;AAAkBF,YAAAA,QAAQ,EAAEH;AAA5B,WAArB;AAAA,oBACKD;AADL;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAcI,QAAC,SAAD;AACI,UAAA,QAAQ,EAAE;AACNI,YAAAA,QAAQ,EAAED,mBADJ;AAENI,YAAAA,SAAS,EAAE,EAFL;AAGNC,YAAAA,QAAQ,EAAE;AAAEC,cAAAA,OAAO,EAAE,CAAX;AAAcC,cAAAA,OAAO,EAAE;AAAvB;AAHJ,WADd;AAAA,oBAOKR;AAPL;AAAA;AAAA;AAAA;AAAA,gBAdJ,eAuBI,QAAC,SAAD;AAAW,UAAA,QAAQ,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBJ,eAwBI,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAE;AAAES,YAAAA,IAAI,EAAE;AAAR,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBJ,eAyBI,QAAC,SAAD;AACI,UAAA,QAAQ,EAAE;AACNN,YAAAA,IAAI,EAAE,cAAC,QAAC,aAAD,MAAmB,WAAnB;AAAA;AAAA;AAAA;AAAA,oBAAD,eAAoC,QAAC,WAAD,MAAiB,aAAjB;AAAA;AAAA;AAAA;AAAA,oBAApC,CADA;AAENO,YAAAA,QAAQ,EAAE,CAAC,YAAD,EAAe,eAAf;AAFJ,WADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzBJ,eAiCI,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAE;AAAEA,YAAAA,QAAQ,EAAE;AAAZ,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjCJ;AAAA,sBADJ;AAqCH,KA9CwC;AAAA;;AAAA","sourcesContent":["import React, { useState } from 'react';\r\nimport { Typography } from 'antd';\r\nimport { HighlightOutlined, SmileOutlined, SmileFilled } from '@ant-design/icons';\r\n\r\nconst { Paragraph } = Typography;\r\nexport default class Icons extends Component {\r\n    Demo = () => {\r\n        const [editableStr, setEditableStr] = useState('This is an editable text.');\r\n        const [customIconStr, setCustomIconStr] = useState('Custom Edit icon and replace tooltip text.');\r\n        const [hideTooltipStr, setHideTooltipStr] = useState('Hide Edit tooltip.');\r\n        const [lengthLimitedStr, setLengthLimitedStr] = useState(\r\n            'This is an editable text with limited length.',\r\n        );\r\n\r\n        return (\r\n            <>\r\n                <Paragraph editable={{ onChange: setEditableStr }}>{editableStr}</Paragraph>\r\n                <Paragraph\r\n                    editable={{\r\n                        icon: <HighlightOutlined />,\r\n                        tooltip: 'click to edit text',\r\n                        onChange: setCustomIconStr,\r\n                    }}\r\n                >\r\n                    {customIconStr}\r\n                </Paragraph>\r\n                <Paragraph editable={{ tooltip: false, onChange: setHideTooltipStr }}>\r\n                    {hideTooltipStr}\r\n                </Paragraph>\r\n                <Paragraph\r\n                    editable={{\r\n                        onChange: setLengthLimitedStr,\r\n                        maxLength: 50,\r\n                        autoSize: { maxRows: 5, minRows: 3 },\r\n                    }}\r\n                >\r\n                    {lengthLimitedStr}\r\n                </Paragraph>\r\n                <Paragraph copyable>This is a copyable text.</Paragraph>\r\n                <Paragraph copyable={{ text: 'Hello, Ant Design!' }}>Replace copy text.</Paragraph>\r\n                <Paragraph\r\n                    copyable={{\r\n                        icon: [<SmileOutlined key=\"copy-icon\" />, <SmileFilled key=\"copied-icon\" />],\r\n                        tooltips: ['click here', 'you clicked!!'],\r\n                    }}\r\n                >\r\n                    Custom Copy icon and replace tooltips text.\r\n                </Paragraph>\r\n                <Paragraph copyable={{ tooltips: false }}>Hide Copy tooltips.</Paragraph>\r\n            </>\r\n        );\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}