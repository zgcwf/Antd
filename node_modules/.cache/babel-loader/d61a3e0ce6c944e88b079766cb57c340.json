{"ast":null,"code":"import \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\antd-demo\\\\src\\\\components\\\\Table7.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Table7() {\n  const columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    filters: [{\n      text: 'Joe',\n      value: 'Joe'\n    }, {\n      text: 'Category 1',\n      value: 'Category 1',\n      children: [{\n        text: 'Yellow',\n        value: 'Yellow'\n      }, {\n        text: 'Pink',\n        value: 'Pink'\n      }]\n    }, {\n      text: 'Category 2',\n      value: 'Category 2',\n      children: [{\n        text: 'Green',\n        value: 'Green'\n      }, {\n        text: 'Black',\n        value: 'Black'\n      }]\n    }],\n    filterMode: 'tree',\n    filterSearch: true,\n    onFilter: (value, record) => record.name.includes(value),\n    width: '30%'\n  }, {\n    title: 'Age',\n    dataIndex: 'age',\n    sorter: (a, b) => a.age - b.age\n  }, {\n    title: 'Address',\n    dataIndex: 'address',\n    filters: [{\n      text: 'London',\n      value: 'London'\n    }, {\n      text: 'New York',\n      value: 'New York'\n    }],\n    onFilter: (value, record) => record.address.startsWith(value),\n    filterSearch: true,\n    width: '40%'\n  }];\n  const data = [{\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park'\n  }, {\n    key: '2',\n    name: 'Jim Green',\n    age: 42,\n    address: 'London No. 1 Lake Park'\n  }, {\n    key: '3',\n    name: 'Joe Black',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park'\n  }, {\n    key: '4',\n    name: 'Jim Red',\n    age: 32,\n    address: 'London No. 2 Lake Park'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(_Table, {\n      columns: columns,\n      dataSource: data,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n_c = Table7;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table7\");","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/antd-demo/src/components/Table7.jsx"],"names":["Table7","columns","title","dataIndex","filters","text","value","children","filterMode","filterSearch","onFilter","record","name","includes","width","sorter","a","b","age","address","startsWith","data","key","onChange"],"mappings":"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","sourcesContent":["import { Table } from 'antd';\r\n\r\n\r\n\r\n\r\nexport default function Table7() {\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            filters: [\r\n                {\r\n                    text: 'Joe',\r\n                    value: 'Joe',\r\n                },\r\n                {\r\n                    text: 'Category 1',\r\n                    value: 'Category 1',\r\n                    children: [\r\n                        {\r\n                            text: 'Yellow',\r\n                            value: 'Yellow',\r\n                        },\r\n                        {\r\n                            text: 'Pink',\r\n                            value: 'Pink',\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    text: 'Category 2',\r\n                    value: 'Category 2',\r\n                    children: [\r\n                        {\r\n                            text: 'Green',\r\n                            value: 'Green',\r\n                        },\r\n                        {\r\n                            text: 'Black',\r\n                            value: 'Black',\r\n                        },\r\n                    ],\r\n                },\r\n            ],\r\n            filterMode: 'tree',\r\n            filterSearch: true,\r\n            onFilter: (value, record) => record.name.includes(value),\r\n            width: '30%',\r\n        },\r\n        {\r\n            title: 'Age',\r\n            dataIndex: 'age',\r\n            sorter: (a, b) => a.age - b.age,\r\n        },\r\n        {\r\n            title: 'Address',\r\n            dataIndex: 'address',\r\n            filters: [\r\n                {\r\n                    text: 'London',\r\n                    value: 'London',\r\n                },\r\n                {\r\n                    text: 'New York',\r\n                    value: 'New York',\r\n                },\r\n            ],\r\n            onFilter: (value, record) => record.address.startsWith(value),\r\n            filterSearch: true,\r\n            width: '40%',\r\n        },\r\n    ];\r\n\r\n    const data = [\r\n        {\r\n            key: '1',\r\n            name: 'John Brown',\r\n            age: 32,\r\n            address: 'New York No. 1 Lake Park',\r\n        },\r\n        {\r\n            key: '2',\r\n            name: 'Jim Green',\r\n            age: 42,\r\n            address: 'London No. 1 Lake Park',\r\n        },\r\n        {\r\n            key: '3',\r\n            name: 'Joe Black',\r\n            age: 32,\r\n            address: 'Sidney No. 1 Lake Park',\r\n        },\r\n        {\r\n            key: '4',\r\n            name: 'Jim Red',\r\n            age: 32,\r\n            address: 'London No. 2 Lake Park',\r\n        },\r\n    ];\r\n    return (\r\n        <div>\r\n            <Table columns={columns} dataSource={data} onChange={onChange} />\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}